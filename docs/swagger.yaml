definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Car:
    properties:
      brand:
        type: string
      comment:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      kilometers:
        type: integer
      model:
        type: string
      ownerID:
        description: Engine       Engine
        type: integer
      owners_number:
        type: integer
      placement:
        type: string
      price:
        type: integer
      status:
        type: string
      updatedAt:
        type: string
      vin_code:
        type: string
      year:
        type: integer
    type: object
  models.Error:
    properties:
      error:
        type: string
    type: object
  models.Message:
    properties:
      message:
        type: string
    type: object
  models.RequestLogin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.RequestRegistration:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.VINRequest:
    properties:
      vin_code:
        type: string
    required:
    - vin_code
    type: object
  models.VINResponse:
    properties:
      country:
        type: string
      manufacturer:
        type: string
      region:
        type: string
      vds:
        type: string
      vin:
        type: string
      vis:
        type: string
      wmi:
        type: string
      years:
        items:
          type: integer
        type: array
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is documentation for Cars Sales App API for all user operations
  title: Cars Sales App API
  version: "0.6"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login to app
      parameters:
      - description: Email, Password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RequestLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      summary: Login
      tags:
      - Authorization
  /auth/registration:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Name, Email, Password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RequestRegistration'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      summary: Registration
      tags:
      - Authorization
  /cars/all:
    get:
      consumes:
      - application/json
      description: Get all cars
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Car'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      summary: Cars
      tags:
      - Cars
  /cars/create:
    post:
      consumes:
      - application/json
      description: Create a car for sale
      parameters:
      - description: Car
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Car'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
      summary: Cars
      tags:
      - Cars
  /cars/my:
    get:
      consumes:
      - application/json
      description: Get owned Cars
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Car'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
      summary: Cars
      tags:
      - Cars
  /vincode/check:
    post:
      consumes:
      - application/json
      description: Use VIN-code for more details
      parameters:
      - description: VIN-code
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.VINRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VINResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
      summary: VIN
      tags:
      - VIN
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
