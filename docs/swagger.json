{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is documentation for Cars Sales App API for all user operations",
        "title": "Cars Sales App API",
        "contact": {},
        "version": "0.6"
    },
    "host": "localhost:3000",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login to app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Email, Password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequestLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/auth/registration": {
            "post": {
                "description": "Register a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "Registration",
                "parameters": [
                    {
                        "description": "Name, Email, Password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequestRegistration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/cars/all": {
            "get": {
                "description": "Get all cars",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Cars",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Car"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/cars/create": {
            "post": {
                "description": "Create a car for sale",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Cars",
                "parameters": [
                    {
                        "description": "Car",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Car"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/cars/my": {
            "get": {
                "description": "Get owned Cars",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Cars",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Car"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/paymnet_intent/:id": {
            "post": {
                "description": "Get Payment Intent by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment Intent"
                ],
                "summary": "Payment Intent Operation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment Intent ID",
                        "name": "payment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/stripe.PaymentIntent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/paymnet_intent/create": {
            "post": {
                "description": "Get Customers Payment Intent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment Intent"
                ],
                "summary": "Payment Intent Operation",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PaymentIntentList"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/vincode/check": {
            "post": {
                "description": "Use VIN-code for more details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VIN"
                ],
                "summary": "VIN",
                "parameters": [
                    {
                        "description": "VIN-code",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VINRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.VINResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.Car": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "kilometers": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "ownerID": {
                    "description": "Engine       Engine",
                    "type": "integer"
                },
                "owners_number": {
                    "type": "integer"
                },
                "placement": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "vin_code": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.PaymentIntentList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.PaymentIntent"
                    }
                },
                "length": {
                    "type": "integer"
                }
            }
        },
        "models.RequestLogin": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.RequestRegistration": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.VINRequest": {
            "type": "object",
            "required": [
                "vin_code"
            ],
            "properties": {
                "vin_code": {
                    "type": "string"
                }
            }
        },
        "models.VINResponse": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "vds": {
                    "type": "string"
                },
                "vin": {
                    "type": "string"
                },
                "vis": {
                    "type": "string"
                },
                "wmi": {
                    "type": "string"
                },
                "years": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "stripe.Account": {
            "type": "object",
            "properties": {
                "business_profile": {
                    "$ref": "#/definitions/stripe.AccountBusinessProfile"
                },
                "business_type": {
                    "$ref": "#/definitions/stripe.AccountBusinessType"
                },
                "capabilities": {
                    "$ref": "#/definitions/stripe.AccountCapabilities"
                },
                "charges_enabled": {
                    "type": "boolean"
                },
                "company": {
                    "$ref": "#/definitions/stripe.AccountCompany"
                },
                "country": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "default_currency": {
                    "$ref": "#/definitions/stripe.Currency"
                },
                "deleted": {
                    "type": "boolean"
                },
                "details_submitted": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "external_accounts": {
                    "$ref": "#/definitions/stripe.ExternalAccountList"
                },
                "id": {
                    "type": "string"
                },
                "individual": {
                    "$ref": "#/definitions/stripe.Person"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "object": {
                    "type": "string"
                },
                "payouts_enabled": {
                    "type": "boolean"
                },
                "requirements": {
                    "$ref": "#/definitions/stripe.AccountRequirements"
                },
                "settings": {
                    "$ref": "#/definitions/stripe.AccountSettings"
                },
                "tos_acceptance": {
                    "$ref": "#/definitions/stripe.AccountTOSAcceptance"
                },
                "type": {
                    "$ref": "#/definitions/stripe.AccountType"
                }
            }
        },
        "stripe.AccountAddress": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "line1": {
                    "type": "string"
                },
                "line2": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "town": {
                    "description": "Town/cho-me. Note that this is only used for Kana/Kanji representations\nof an address.",
                    "type": "string"
                }
            }
        },
        "stripe.AccountBusinessProfile": {
            "type": "object",
            "properties": {
                "mcc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "product_description": {
                    "type": "string"
                },
                "support_address": {
                    "$ref": "#/definitions/stripe.Address"
                },
                "support_email": {
                    "type": "string"
                },
                "support_phone": {
                    "type": "string"
                },
                "support_url": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.AccountBusinessType": {
            "type": "string",
            "enum": [
                "company",
                "government_entity",
                "individual",
                "non_profit"
            ],
            "x-enum-varnames": [
                "AccountBusinessTypeCompany",
                "AccountBusinessTypeGovernmentEntity",
                "AccountBusinessTypeIndividual",
                "AccountBusinessTypeNonProfit"
            ]
        },
        "stripe.AccountCapabilities": {
            "type": "object",
            "properties": {
                "au_becs_debit_payments": {
                    "$ref": "#/definitions/stripe.AccountCapabilityStatus"
                },
                "card_payments": {
                    "$ref": "#/definitions/stripe.AccountCapabilityStatus"
                },
                "legacy_payments": {
                    "$ref": "#/definitions/stripe.AccountCapabilityStatus"
                },
                "tax_reporting_us_1099_k": {
                    "$ref": "#/definitions/stripe.AccountCapabilityStatus"
                },
                "tax_reporting_us_1099_misc": {
                    "$ref": "#/definitions/stripe.AccountCapabilityStatus"
                },
                "transfers": {
                    "$ref": "#/definitions/stripe.AccountCapabilityStatus"
                }
            }
        },
        "stripe.AccountCapabilityStatus": {
            "type": "string",
            "enum": [
                "active",
                "inactive",
                "pending"
            ],
            "x-enum-varnames": [
                "AccountCapabilityStatusActive",
                "AccountCapabilityStatusInactive",
                "AccountCapabilityStatusPending"
            ]
        },
        "stripe.AccountCompany": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/stripe.AccountAddress"
                },
                "address_kana": {
                    "$ref": "#/definitions/stripe.AccountAddress"
                },
                "address_kanji": {
                    "$ref": "#/definitions/stripe.AccountAddress"
                },
                "directors_provided": {
                    "type": "boolean"
                },
                "executives_provided": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "name_kana": {
                    "type": "string"
                },
                "name_kanji": {
                    "type": "string"
                },
                "owners_provided": {
                    "type": "boolean"
                },
                "phone": {
                    "type": "string"
                },
                "structure": {
                    "$ref": "#/definitions/stripe.AccountCompanyStructure"
                },
                "tax_id_provided": {
                    "type": "boolean"
                },
                "tax_id_registrar": {
                    "type": "string"
                },
                "vat_id_provided": {
                    "type": "boolean"
                },
                "verification": {
                    "$ref": "#/definitions/stripe.AccountCompanyVerification"
                }
            }
        },
        "stripe.AccountCompanyStructure": {
            "type": "string",
            "enum": [
                "government_instrumentality",
                "governmental_unit",
                "incorporated_non_profit",
                "multi_member_llc",
                "private_corporation",
                "private_partnership",
                "public_corporation",
                "public_partnership",
                "tax_exempt_government_instrumentality",
                "unincorporated_association",
                "unincorporated_non_profit"
            ],
            "x-enum-varnames": [
                "AccountCompanyStructureGovernmentInstrumentality",
                "AccountCompanyStructureGovernmentalUnit",
                "AccountCompanyStructureIncorporatedNonProfit",
                "AccountCompanyStructureMultiMemberLLC",
                "AccountCompanyStructurePrivateCorporation",
                "AccountCompanyStructurePrivatePartnership",
                "AccountCompanyStructurePublicCorporation",
                "AccountCompanyStructurePublicPartnership",
                "AccountCompanyStructureTaxExemptGovernmentInstrumentality",
                "AccountCompanyStructureUnincorporatedAssociation",
                "AccountCompanyStructureUnincorporatedNonProfit"
            ]
        },
        "stripe.AccountCompanyVerification": {
            "type": "object",
            "properties": {
                "document": {
                    "$ref": "#/definitions/stripe.AccountCompanyVerificationDocument"
                }
            }
        },
        "stripe.AccountCompanyVerificationDocument": {
            "type": "object",
            "properties": {
                "back": {
                    "$ref": "#/definitions/stripe.File"
                },
                "details": {
                    "type": "string"
                },
                "details_code": {
                    "$ref": "#/definitions/stripe.AccountCompanyVerificationDocumentDetailsCode"
                },
                "front": {
                    "$ref": "#/definitions/stripe.File"
                }
            }
        },
        "stripe.AccountCompanyVerificationDocumentDetailsCode": {
            "type": "string",
            "enum": [
                "document_corrupt",
                "document_failed_copy",
                "document_failed_other",
                "document_failed_test_mode",
                "document_fraudulent",
                "document_invalid",
                "document_manipulated",
                "document_not_readable",
                "document_not_uploaded",
                "document_too_large"
            ],
            "x-enum-varnames": [
                "AccountCompanyVerificationDocumentDetailsCodeDocumentCorrupt",
                "AccountCompanyVerificationDocumentDetailsCodeDocumentFailedCopy",
                "AccountCompanyVerificationDocumentDetailsCodeDocumentFailedOther",
                "AccountCompanyVerificationDocumentDetailsCodeDocumentFailedTestMode",
                "AccountCompanyVerificationDocumentDetailsCodeDocumentFraudulent",
                "AccountCompanyVerificationDocumentDetailsCodeDocumentInvalid",
                "AccountCompanyVerificationDocumentDetailsCodeDocumentManipulated",
                "AccountCompanyVerificationDocumentDetailsCodeDocumentNotReadable",
                "AccountCompanyVerificationDocumentDetailsCodeDocumentNotUploaded",
                "AccountCompanyVerificationDocumentDetailsCodeDocumentTooLarge"
            ]
        },
        "stripe.AccountDeclineOn": {
            "type": "object",
            "properties": {
                "avs_failure": {
                    "type": "boolean"
                },
                "cvc_failure": {
                    "type": "boolean"
                }
            }
        },
        "stripe.AccountPayoutSchedule": {
            "type": "object",
            "properties": {
                "delay_days": {
                    "type": "integer"
                },
                "interval": {
                    "$ref": "#/definitions/stripe.PayoutInterval"
                },
                "monthly_anchor": {
                    "type": "integer"
                },
                "weekly_anchor": {
                    "type": "string"
                }
            }
        },
        "stripe.AccountRequirements": {
            "type": "object",
            "properties": {
                "current_deadline": {
                    "type": "integer"
                },
                "currently_due": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "disabled_reason": {
                    "$ref": "#/definitions/stripe.AccountRequirementsDisabledReason"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.AccountRequirementsError"
                    }
                },
                "eventually_due": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "past_due": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pending_verification": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "stripe.AccountRequirementsDisabledReason": {
            "type": "string",
            "enum": [
                "fields_needed",
                "listed",
                "other",
                "rejected.fraud",
                "rejected.listed",
                "rejected.other",
                "rejected.terms_of_service",
                "under_review"
            ],
            "x-enum-varnames": [
                "AccountRequirementsDisabledReasonFieldsNeeded",
                "AccountRequirementsDisabledReasonListed",
                "AccountRequirementsDisabledReasonOther",
                "AccountRequirementsDisabledReasonRejectedFraud",
                "AccountRequirementsDisabledReasonRejectedListed",
                "AccountRequirementsDisabledReasonRejectedOther",
                "AccountRequirementsDisabledReasonRejectedTermsOfService",
                "AccountRequirementsDisabledReasonUnderReview"
            ]
        },
        "stripe.AccountRequirementsError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "requirement": {
                    "type": "string"
                }
            }
        },
        "stripe.AccountSettings": {
            "type": "object",
            "properties": {
                "branding": {
                    "$ref": "#/definitions/stripe.AccountSettingsBranding"
                },
                "card_payments": {
                    "$ref": "#/definitions/stripe.AccountSettingsCardPayments"
                },
                "dashboard": {
                    "$ref": "#/definitions/stripe.AccountSettingsDashboard"
                },
                "payments": {
                    "$ref": "#/definitions/stripe.AccountSettingsPayments"
                },
                "payouts": {
                    "$ref": "#/definitions/stripe.AccountSettingsPayouts"
                }
            }
        },
        "stripe.AccountSettingsBranding": {
            "type": "object",
            "properties": {
                "icon": {
                    "$ref": "#/definitions/stripe.File"
                },
                "logo": {
                    "$ref": "#/definitions/stripe.File"
                },
                "primary_color": {
                    "type": "string"
                },
                "secondary_color": {
                    "type": "string"
                }
            }
        },
        "stripe.AccountSettingsCardPayments": {
            "type": "object",
            "properties": {
                "decline_on": {
                    "$ref": "#/definitions/stripe.AccountDeclineOn"
                },
                "statement_descriptor_prefix": {
                    "type": "string"
                }
            }
        },
        "stripe.AccountSettingsDashboard": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                }
            }
        },
        "stripe.AccountSettingsPayments": {
            "type": "object",
            "properties": {
                "statement_descriptor": {
                    "type": "string"
                },
                "statement_descriptor_kana": {
                    "type": "string"
                },
                "statement_descriptor_kanji": {
                    "type": "string"
                }
            }
        },
        "stripe.AccountSettingsPayouts": {
            "type": "object",
            "properties": {
                "debit_negative_balances": {
                    "type": "boolean"
                },
                "schedule": {
                    "$ref": "#/definitions/stripe.AccountPayoutSchedule"
                },
                "statement_descriptor": {
                    "type": "string"
                }
            }
        },
        "stripe.AccountTOSAcceptance": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                }
            }
        },
        "stripe.AccountType": {
            "type": "string",
            "enum": [
                "custom",
                "express",
                "standard"
            ],
            "x-enum-varnames": [
                "AccountTypeCustom",
                "AccountTypeExpress",
                "AccountTypeStandard"
            ]
        },
        "stripe.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "line1": {
                    "type": "string"
                },
                "line2": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "stripe.Application": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "stripe.ApplicationFee": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/stripe.Account"
                },
                "amount": {
                    "type": "integer"
                },
                "amount_refunded": {
                    "type": "integer"
                },
                "application": {
                    "type": "string"
                },
                "balance_transaction": {
                    "$ref": "#/definitions/stripe.BalanceTransaction"
                },
                "charge": {
                    "$ref": "#/definitions/stripe.Charge"
                },
                "created": {
                    "type": "integer"
                },
                "currency": {
                    "$ref": "#/definitions/stripe.Currency"
                },
                "id": {
                    "type": "string"
                },
                "livemode": {
                    "type": "boolean"
                },
                "originating_transaction": {
                    "$ref": "#/definitions/stripe.Charge"
                },
                "refunded": {
                    "type": "boolean"
                },
                "refunds": {
                    "$ref": "#/definitions/stripe.FeeRefundList"
                }
            }
        },
        "stripe.BalanceTransaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "available_on": {
                    "type": "integer"
                },
                "created": {
                    "type": "integer"
                },
                "currency": {
                    "$ref": "#/definitions/stripe.Currency"
                },
                "description": {
                    "type": "string"
                },
                "exchange_rate": {
                    "type": "number"
                },
                "fee": {
                    "type": "integer"
                },
                "fee_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.BalanceTransactionFee"
                    }
                },
                "id": {
                    "type": "string"
                },
                "net": {
                    "type": "integer"
                },
                "recipient": {
                    "type": "string"
                },
                "reporting_category": {
                    "$ref": "#/definitions/stripe.BalanceTransactionReportingCategory"
                },
                "source": {
                    "$ref": "#/definitions/stripe.BalanceTransactionSource"
                },
                "status": {
                    "$ref": "#/definitions/stripe.BalanceTransactionStatus"
                },
                "type": {
                    "$ref": "#/definitions/stripe.BalanceTransactionType"
                }
            }
        },
        "stripe.BalanceTransactionFee": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "application": {
                    "type": "string"
                },
                "currency": {
                    "$ref": "#/definitions/stripe.Currency"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "stripe.BalanceTransactionReportingCategory": {
            "type": "string",
            "enum": [
                "advance",
                "advance_funding",
                "charge",
                "charge_failure",
                "connect_collection_transfer",
                "connect_reserved_funds",
                "dispute",
                "dispute_reversal",
                "fee",
                "issuing_authorization_hold",
                "issuing_authorization_release",
                "issuing_transaction",
                "other_adjustment",
                "partial_capture_reversal",
                "payout",
                "payout_reversal",
                "platform_earning",
                "platform_earning_refund",
                "refund",
                "refund_failure",
                "risk_reserved_funds",
                "tax",
                "topup",
                "topup_reversal",
                "transfer",
                "transfer_reversal"
            ],
            "x-enum-varnames": [
                "BalanceTransactionReportingCategoryAdvance",
                "BalanceTransactionReportingCategoryAdvanceFunding",
                "BalanceTransactionReportingCategoryCharge",
                "BalanceTransactionReportingCategoryChargeFailure",
                "BalanceTransactionReportingCategoryConnectCollectionTransfer",
                "BalanceTransactionReportingCategoryConnectReservedFunds",
                "BalanceTransactionReportingCategoryDispute",
                "BalanceTransactionReportingCategoryDisputeReversal",
                "BalanceTransactionReportingCategoryFee",
                "BalanceTransactionReportingCategoryIssuingAuthorizationHold",
                "BalanceTransactionReportingCategoryIssuingAuthorizationRelease",
                "BalanceTransactionReportingCategoryIssuingTransaction",
                "BalanceTransactionReportingCategoryOtherAdjustment",
                "BalanceTransactionReportingCategoryPartialCaptureReversal",
                "BalanceTransactionReportingCategoryPayout",
                "BalanceTransactionReportingCategoryPayoutReversal",
                "BalanceTransactionReportingCategoryPlatformEarning",
                "BalanceTransactionReportingCategoryPlatformEarningRefund",
                "BalanceTransactionReportingCategoryRefund",
                "BalanceTransactionReportingCategoryRefundFailure",
                "BalanceTransactionReportingCategoryRiskReservedFunds",
                "BalanceTransactionReportingCategoryTax",
                "BalanceTransactionReportingCategoryTopup",
                "BalanceTransactionReportingCategoryTopupReversal",
                "BalanceTransactionReportingCategoryTransfer",
                "BalanceTransactionReportingCategoryTransferReversal"
            ]
        },
        "stripe.BalanceTransactionSource": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "object": {
                    "$ref": "#/definitions/stripe.BalanceTransactionSourceType"
                }
            }
        },
        "stripe.BalanceTransactionSourceType": {
            "type": "string",
            "enum": [
                "application_fee",
                "charge",
                "dispute",
                "issuing.authorization",
                "issuing.transaction",
                "payout",
                "recipient_transfer",
                "refund",
                "reversal",
                "transfer"
            ],
            "x-enum-varnames": [
                "BalanceTransactionSourceTypeApplicationFee",
                "BalanceTransactionSourceTypeCharge",
                "BalanceTransactionSourceTypeDispute",
                "BalanceTransactionSourceTypeIssuingAuthorization",
                "BalanceTransactionSourceTypeIssuingTransaction",
                "BalanceTransactionSourceTypePayout",
                "BalanceTransactionSourceTypeRecipientTransfer",
                "BalanceTransactionSourceTypeRefund",
                "BalanceTransactionSourceTypeReversal",
                "BalanceTransactionSourceTypeTransfer"
            ]
        },
        "stripe.BalanceTransactionStatus": {
            "type": "string",
            "enum": [
                "available",
                "pending"
            ],
            "x-enum-varnames": [
                "BalanceTransactionStatusAvailable",
                "BalanceTransactionStatusPending"
            ]
        },
        "stripe.BalanceTransactionType": {
            "type": "string",
            "enum": [
                "adjustment",
                "application_fee",
                "application_fee_refund",
                "charge",
                "issuing_authorization_hold",
                "issuing_authorization_release",
                "issuing_transaction",
                "payment",
                "payment_failure_refund",
                "payment_refund",
                "payout",
                "payout_cancel",
                "payout_failure",
                "recipient_transfer",
                "recipient_transfer_cancel",
                "recipient_transfer_failure",
                "refund",
                "stripe_fee",
                "transfer",
                "transfer_refund"
            ],
            "x-enum-varnames": [
                "BalanceTransactionTypeAdjustment",
                "BalanceTransactionTypeApplicationFee",
                "BalanceTransactionTypeApplicationFeeRefund",
                "BalanceTransactionTypeCharge",
                "BalanceTransactionTypeIssuingAuthorizationHold",
                "BalanceTransactionTypeIssuingAuthorizationRelease",
                "BalanceTransactionTypeIssuingAuthorizationTransaction",
                "BalanceTransactionTypePayment",
                "BalanceTransactionTypePaymentFailureRefund",
                "BalanceTransactionTypePaymentRefund",
                "BalanceTransactionTypePayout",
                "BalanceTransactionTypePayoutCancel",
                "BalanceTransactionTypePayoutFailure",
                "BalanceTransactionTypeRecipientTransfer",
                "BalanceTransactionTypeRecipientTransferCancel",
                "BalanceTransactionTypeRecipientTransferFailure",
                "BalanceTransactionTypeRefund",
                "BalanceTransactionTypeStripeFee",
                "BalanceTransactionTypeTransfer",
                "BalanceTransactionTypeTransferRefund"
            ]
        },
        "stripe.BankAccount": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/stripe.Account"
                },
                "account_holder_name": {
                    "type": "string"
                },
                "account_holder_type": {
                    "$ref": "#/definitions/stripe.BankAccountAccountHolderType"
                },
                "bank_name": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "currency": {
                    "$ref": "#/definitions/stripe.Currency"
                },
                "customer": {
                    "$ref": "#/definitions/stripe.Customer"
                },
                "default_for_currency": {
                    "type": "boolean"
                },
                "deleted": {
                    "type": "boolean"
                },
                "fingerprint": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last4": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "routing_number": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/stripe.BankAccountStatus"
                }
            }
        },
        "stripe.BankAccountAccountHolderType": {
            "type": "string",
            "enum": [
                "company",
                "individual"
            ],
            "x-enum-varnames": [
                "BankAccountAccountHolderTypeCompany",
                "BankAccountAccountHolderTypeIndividual"
            ]
        },
        "stripe.BankAccountStatus": {
            "type": "string",
            "enum": [
                "errored",
                "new",
                "validated",
                "verification_failed",
                "verified"
            ],
            "x-enum-varnames": [
                "BankAccountStatusErrored",
                "BankAccountStatusNew",
                "BankAccountStatusValidated",
                "BankAccountStatusVerificationFailed",
                "BankAccountStatusVerified"
            ]
        },
        "stripe.BillingDetails": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/stripe.Address"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "stripe.Card": {
            "type": "object",
            "properties": {
                "address_city": {
                    "type": "string"
                },
                "address_country": {
                    "type": "string"
                },
                "address_line1": {
                    "type": "string"
                },
                "address_line1_check": {
                    "$ref": "#/definitions/stripe.CardVerification"
                },
                "address_line2": {
                    "type": "string"
                },
                "address_state": {
                    "type": "string"
                },
                "address_zip": {
                    "type": "string"
                },
                "address_zip_check": {
                    "$ref": "#/definitions/stripe.CardVerification"
                },
                "available_payout_methods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.CardAvailablePayoutMethod"
                    }
                },
                "brand": {
                    "$ref": "#/definitions/stripe.CardBrand"
                },
                "country": {
                    "type": "string"
                },
                "currency": {
                    "$ref": "#/definitions/stripe.Currency"
                },
                "customer": {
                    "$ref": "#/definitions/stripe.Customer"
                },
                "cvc_check": {
                    "$ref": "#/definitions/stripe.CardVerification"
                },
                "default_for_currency": {
                    "type": "boolean"
                },
                "deleted": {
                    "type": "boolean"
                },
                "description": {
                    "description": "Description is a succinct summary of the card's information.\n\nPlease note that this field is for internal use only and is not returned\nas part of standard API requests.",
                    "type": "string"
                },
                "dynamic_last4": {
                    "type": "string"
                },
                "exp_month": {
                    "type": "integer"
                },
                "exp_year": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "funding": {
                    "$ref": "#/definitions/stripe.CardFunding"
                },
                "id": {
                    "type": "string"
                },
                "iin": {
                    "description": "IIN is the card's \"Issuer Identification Number\".\n\nPlease note that this field is for internal use only and is not returned\nas part of standard API requests.",
                    "type": "string"
                },
                "issuer": {
                    "description": "Issuer is a bank or financial institution that provides the card.\n\nPlease note that this field is for internal use only and is not returned\nas part of standard API requests.",
                    "type": "string"
                },
                "last4": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "recipient": {
                    "$ref": "#/definitions/stripe.Recipient"
                },
                "three_d_secure": {
                    "$ref": "#/definitions/stripe.ThreeDSecure"
                },
                "tokenization_method": {
                    "$ref": "#/definitions/stripe.CardTokenizationMethod"
                }
            }
        },
        "stripe.CardAvailablePayoutMethod": {
            "type": "string",
            "enum": [
                "Instant",
                "Standard"
            ],
            "x-enum-varnames": [
                "CardAvailablePayoutMethodInstant",
                "CardAvailablePayoutMethodStandard"
            ]
        },
        "stripe.CardBrand": {
            "type": "string",
            "enum": [
                "American Express",
                "Discover",
                "Diners Club",
                "JCB",
                "MasterCard",
                "Unknown",
                "UnionPay",
                "Visa"
            ],
            "x-enum-varnames": [
                "CardBrandAmex",
                "CardBrandDiscover",
                "CardBrandDinersClub",
                "CardBrandJCB",
                "CardBrandMasterCard",
                "CardBrandUnknown",
                "CardBrandUnionPay",
                "CardBrandVisa"
            ]
        },
        "stripe.CardFunding": {
            "type": "string",
            "enum": [
                "credit",
                "debit",
                "prepaid",
                "unknown"
            ],
            "x-enum-varnames": [
                "CardFundingCredit",
                "CardFundingDebit",
                "CardFundingPrepaid",
                "CardFundingUnknown"
            ]
        },
        "stripe.CardList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.Card"
                    }
                },
                "has_more": {
                    "type": "boolean"
                },
                "total_count": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.CardTokenizationMethod": {
            "type": "string",
            "enum": [
                "android_pay",
                "apple_pay"
            ],
            "x-enum-varnames": [
                "TokenizationMethodAndroidPay",
                "TokenizationMethodApplePay"
            ]
        },
        "stripe.CardVerification": {
            "type": "string",
            "enum": [
                "fail",
                "pass",
                "unavailable",
                "unchecked"
            ],
            "x-enum-varnames": [
                "CardVerificationFail",
                "CardVerificationPass",
                "CardVerificationUnavailable",
                "CardVerificationUnchecked"
            ]
        },
        "stripe.Charge": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "amount_refunded": {
                    "type": "integer"
                },
                "application": {
                    "$ref": "#/definitions/stripe.Application"
                },
                "application_fee": {
                    "$ref": "#/definitions/stripe.ApplicationFee"
                },
                "application_fee_amount": {
                    "type": "integer"
                },
                "authorization_code": {
                    "type": "string"
                },
                "balance_transaction": {
                    "$ref": "#/definitions/stripe.BalanceTransaction"
                },
                "billing_details": {
                    "$ref": "#/definitions/stripe.BillingDetails"
                },
                "calculated_statement_descriptor": {
                    "type": "string"
                },
                "captured": {
                    "type": "boolean"
                },
                "created": {
                    "type": "integer"
                },
                "currency": {
                    "$ref": "#/definitions/stripe.Currency"
                },
                "customer": {
                    "$ref": "#/definitions/stripe.Customer"
                },
                "description": {
                    "type": "string"
                },
                "destination": {
                    "$ref": "#/definitions/stripe.Account"
                },
                "dispute": {
                    "$ref": "#/definitions/stripe.Dispute"
                },
                "disputed": {
                    "type": "boolean"
                },
                "failure_code": {
                    "type": "string"
                },
                "failure_message": {
                    "type": "string"
                },
                "fraud_details": {
                    "$ref": "#/definitions/stripe.FraudDetails"
                },
                "id": {
                    "type": "string"
                },
                "invoice": {
                    "$ref": "#/definitions/stripe.Invoice"
                },
                "level3": {
                    "$ref": "#/definitions/stripe.ChargeLevel3"
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "on_behalf_of": {
                    "$ref": "#/definitions/stripe.Account"
                },
                "outcome": {
                    "$ref": "#/definitions/stripe.ChargeOutcome"
                },
                "paid": {
                    "type": "boolean"
                },
                "payment_intent": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                },
                "payment_method_details": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetails"
                },
                "receipt_email": {
                    "type": "string"
                },
                "receipt_number": {
                    "type": "string"
                },
                "receipt_url": {
                    "type": "string"
                },
                "refunded": {
                    "type": "boolean"
                },
                "refunds": {
                    "$ref": "#/definitions/stripe.RefundList"
                },
                "review": {
                    "$ref": "#/definitions/stripe.Review"
                },
                "shipping": {
                    "$ref": "#/definitions/stripe.ShippingDetails"
                },
                "source": {
                    "$ref": "#/definitions/stripe.PaymentSource"
                },
                "source_transfer": {
                    "$ref": "#/definitions/stripe.Transfer"
                },
                "statement_descriptor": {
                    "type": "string"
                },
                "statement_descriptor_suffix": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "transfer": {
                    "$ref": "#/definitions/stripe.Transfer"
                },
                "transfer_data": {
                    "$ref": "#/definitions/stripe.ChargeTransferData"
                },
                "transfer_group": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargeFraudStripeReport": {
            "type": "string",
            "enum": [
                "fraudulent"
            ],
            "x-enum-varnames": [
                "ChargeFraudStripeReportFraudulent"
            ]
        },
        "stripe.ChargeFraudUserReport": {
            "type": "string",
            "enum": [
                "fraudulent",
                "safe"
            ],
            "x-enum-varnames": [
                "ChargeFraudUserReportFraudulent",
                "ChargeFraudUserReportSafe"
            ]
        },
        "stripe.ChargeLevel3": {
            "type": "object",
            "properties": {
                "customer_reference": {
                    "type": "string"
                },
                "line_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.ChargeLevel3LineItem"
                    }
                },
                "merchant_reference": {
                    "type": "string"
                },
                "shipping_address_zip": {
                    "type": "string"
                },
                "shipping_amount": {
                    "type": "integer"
                },
                "shipping_from_zip": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargeLevel3LineItem": {
            "type": "object",
            "properties": {
                "discount_amount": {
                    "type": "integer"
                },
                "product_code": {
                    "type": "string"
                },
                "product_description": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "tax_amount": {
                    "type": "integer"
                },
                "unit_cost": {
                    "type": "integer"
                }
            }
        },
        "stripe.ChargeList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.Charge"
                    }
                },
                "has_more": {
                    "type": "boolean"
                },
                "total_count": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargeOutcome": {
            "type": "object",
            "properties": {
                "network_status": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "risk_level": {
                    "type": "string"
                },
                "risk_score": {
                    "type": "integer"
                },
                "rule": {
                    "$ref": "#/definitions/stripe.ChargeOutcomeRule"
                },
                "seller_message": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargeOutcomeRule": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "predicate": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargePaymentMethodDetails": {
            "type": "object",
            "properties": {
                "ach_credit_transfer": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsAchCreditTransfer"
                },
                "ach_debit": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsAchDebit"
                },
                "alipay": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsAlipay"
                },
                "au_becs_debit": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsAUBECSDebit"
                },
                "bancontact": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsBancontact"
                },
                "bitcoin": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsBitcoin"
                },
                "card": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsCard"
                },
                "card_present": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsCardPresent"
                },
                "eps": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsEps"
                },
                "fpx": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsFPX"
                },
                "giropay": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsGiropay"
                },
                "ideal": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsIdeal"
                },
                "klarna": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsKlarna"
                },
                "multibanco": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsMultibanco"
                },
                "p24": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsP24"
                },
                "sepa_debit": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsSepaDebit"
                },
                "sofort": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsSofort"
                },
                "stripe_account": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsStripeAccount"
                },
                "type": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsType"
                },
                "wechat": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsWechat"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsAUBECSDebit": {
            "type": "object",
            "properties": {
                "bsb_number": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "last4": {
                    "type": "string"
                },
                "mandate": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsAchCreditTransfer": {
            "type": "object",
            "properties": {
                "account_number": {
                    "type": "string"
                },
                "bank_name": {
                    "type": "string"
                },
                "routing_number": {
                    "type": "string"
                },
                "swift_code": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsAchDebit": {
            "type": "object",
            "properties": {
                "account_holder_type": {
                    "$ref": "#/definitions/stripe.BankAccountAccountHolderType"
                },
                "bank_name": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "last4": {
                    "type": "string"
                },
                "routing_number": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsAlipay": {
            "type": "object"
        },
        "stripe.ChargePaymentMethodDetailsBancontact": {
            "type": "object",
            "properties": {
                "bank_code": {
                    "type": "string"
                },
                "bank_name": {
                    "type": "string"
                },
                "bic": {
                    "type": "string"
                },
                "iban_last4": {
                    "type": "string"
                },
                "preferred_language": {
                    "type": "string"
                },
                "verified_name": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsBitcoin": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "amount_charged": {
                    "type": "integer"
                },
                "amount_received": {
                    "type": "integer"
                },
                "amount_returned": {
                    "type": "integer"
                },
                "refund_address": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsCard": {
            "type": "object",
            "properties": {
                "brand": {
                    "$ref": "#/definitions/stripe.PaymentMethodCardBrand"
                },
                "checks": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsCardChecks"
                },
                "country": {
                    "type": "string"
                },
                "description": {
                    "description": "Please note that the fields below are for internal use only and are not returned\nas part of standard API requests.",
                    "type": "string"
                },
                "exp_month": {
                    "type": "integer"
                },
                "exp_year": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "funding": {
                    "$ref": "#/definitions/stripe.CardFunding"
                },
                "iin": {
                    "type": "string"
                },
                "installments": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsCardInstallments"
                },
                "issuer": {
                    "type": "string"
                },
                "last4": {
                    "type": "string"
                },
                "moto": {
                    "type": "boolean"
                },
                "network": {
                    "$ref": "#/definitions/stripe.PaymentMethodCardNetwork"
                },
                "three_d_secure": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsCardThreeDSecure"
                },
                "wallet": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsCardWallet"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsCardChecks": {
            "type": "object",
            "properties": {
                "address_line1_check": {
                    "$ref": "#/definitions/stripe.CardVerification"
                },
                "address_postal_code_check": {
                    "$ref": "#/definitions/stripe.CardVerification"
                },
                "cvc_check": {
                    "$ref": "#/definitions/stripe.CardVerification"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsCardInstallments": {
            "type": "object",
            "properties": {
                "plan": {
                    "$ref": "#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardInstallmentsPlan"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsCardPresent": {
            "type": "object",
            "properties": {
                "brand": {
                    "$ref": "#/definitions/stripe.PaymentMethodCardBrand"
                },
                "country": {
                    "type": "string"
                },
                "emv_auth_data": {
                    "type": "string"
                },
                "exp_month": {
                    "type": "integer"
                },
                "exp_year": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "funding": {
                    "$ref": "#/definitions/stripe.CardFunding"
                },
                "generated_card": {
                    "type": "string"
                },
                "last4": {
                    "type": "string"
                },
                "network": {
                    "$ref": "#/definitions/stripe.PaymentMethodCardNetwork"
                },
                "read_method": {
                    "type": "string"
                },
                "receipt": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsCardPresentReceipt"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsCardPresentReceipt": {
            "type": "object",
            "properties": {
                "application_cryptogram": {
                    "type": "string"
                },
                "application_preferred_name": {
                    "type": "string"
                },
                "authorization_code": {
                    "type": "string"
                },
                "authorization_response_code": {
                    "type": "string"
                },
                "cardholder_verification_method": {
                    "type": "string"
                },
                "dedicated_file_name": {
                    "type": "string"
                },
                "terminal_verification_results": {
                    "type": "string"
                },
                "transaction_status_information": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsCardThreeDSecure": {
            "type": "object",
            "properties": {
                "authenticated": {
                    "type": "boolean"
                },
                "succeeded": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsCardWallet": {
            "type": "object",
            "properties": {
                "amex_express_checkout": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsCardWalletAmexExpressCheckout"
                },
                "apple_pay": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsCardWalletApplePay"
                },
                "dynamic_last4": {
                    "type": "string"
                },
                "google_pay": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsCardWalletGooglePay"
                },
                "masterpass": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsCardWalletMasterpass"
                },
                "samsung_pay": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsCardWalletSamsungPay"
                },
                "type": {
                    "$ref": "#/definitions/stripe.PaymentMethodCardWalletType"
                },
                "visa_checkout": {
                    "$ref": "#/definitions/stripe.ChargePaymentMethodDetailsCardWalletVisaCheckout"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsCardWalletAmexExpressCheckout": {
            "type": "object"
        },
        "stripe.ChargePaymentMethodDetailsCardWalletApplePay": {
            "type": "object"
        },
        "stripe.ChargePaymentMethodDetailsCardWalletGooglePay": {
            "type": "object"
        },
        "stripe.ChargePaymentMethodDetailsCardWalletMasterpass": {
            "type": "object",
            "properties": {
                "billing_address": {
                    "$ref": "#/definitions/stripe.Address"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "shipping_address": {
                    "$ref": "#/definitions/stripe.Address"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsCardWalletSamsungPay": {
            "type": "object"
        },
        "stripe.ChargePaymentMethodDetailsCardWalletVisaCheckout": {
            "type": "object",
            "properties": {
                "billing_address": {
                    "$ref": "#/definitions/stripe.Address"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "shipping_address": {
                    "$ref": "#/definitions/stripe.Address"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsEps": {
            "type": "object",
            "properties": {
                "verified_name": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsFPX": {
            "type": "object",
            "properties": {
                "account_holder_type": {
                    "$ref": "#/definitions/stripe.PaymentMethodFPXAccountHolderType"
                },
                "bank": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsGiropay": {
            "type": "object",
            "properties": {
                "bank_code": {
                    "type": "string"
                },
                "bank_name": {
                    "type": "string"
                },
                "bic": {
                    "type": "string"
                },
                "verified_name": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsIdeal": {
            "type": "object",
            "properties": {
                "bank": {
                    "type": "string"
                },
                "bic": {
                    "type": "string"
                },
                "iban_last4": {
                    "type": "string"
                },
                "verified_name": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsKlarna": {
            "type": "object"
        },
        "stripe.ChargePaymentMethodDetailsMultibanco": {
            "type": "object",
            "properties": {
                "entity": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsP24": {
            "type": "object",
            "properties": {
                "reference": {
                    "type": "string"
                },
                "verified_name": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsSepaDebit": {
            "type": "object",
            "properties": {
                "bank_code": {
                    "type": "string"
                },
                "branch_code": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "last4": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsSofort": {
            "type": "object",
            "properties": {
                "bank_code": {
                    "type": "string"
                },
                "bank_name": {
                    "type": "string"
                },
                "bic": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "iban_last4": {
                    "type": "string"
                },
                "verified_name": {
                    "type": "string"
                }
            }
        },
        "stripe.ChargePaymentMethodDetailsStripeAccount": {
            "type": "object"
        },
        "stripe.ChargePaymentMethodDetailsType": {
            "type": "string",
            "enum": [
                "ach_credit_transfer",
                "ach_debit",
                "acss_debit",
                "alipay",
                "au_becs_debit",
                "bancontact",
                "bitcoin",
                "card",
                "card_present",
                "eps",
                "fpx",
                "giropay",
                "ideal",
                "klarna",
                "multibanco",
                "p24",
                "sepa_debit",
                "sofort",
                "stripe_account",
                "wechat"
            ],
            "x-enum-comments": {
                "ChargePaymentMethodDetailsTypeBitcoin": "This is unsupported today and is here for legacy charges."
            },
            "x-enum-varnames": [
                "ChargePaymentMethodDetailsTypeAchCreditTransfer",
                "ChargePaymentMethodDetailsTypeAchDebit",
                "ChargePaymentMethodDetailsTypeAcssDebit",
                "ChargePaymentMethodDetailsTypeAlipay",
                "ChargePaymentMethodDetailsTypeAUBECSDebit",
                "ChargePaymentMethodDetailsTypeBancontact",
                "ChargePaymentMethodDetailsTypeBitcoin",
                "ChargePaymentMethodDetailsTypeCard",
                "ChargePaymentMethodDetailsTypeCardPresent",
                "ChargePaymentMethodDetailsTypeEps",
                "ChargePaymentMethodDetailsTypeFPX",
                "ChargePaymentMethodDetailsTypeGiropay",
                "ChargePaymentMethodDetailsTypeIdeal",
                "ChargePaymentMethodDetailsTypeKlarna",
                "ChargePaymentMethodDetailsTypeMultibanco",
                "ChargePaymentMethodDetailsTypeP24",
                "ChargePaymentMethodDetailsTypeSepaDebit",
                "ChargePaymentMethodDetailsTypeSofort",
                "ChargePaymentMethodDetailsTypeStripeAccount",
                "ChargePaymentMethodDetailsTypeWechat"
            ]
        },
        "stripe.ChargePaymentMethodDetailsWechat": {
            "type": "object"
        },
        "stripe.ChargeTransferData": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "destination": {
                    "$ref": "#/definitions/stripe.Account"
                }
            }
        },
        "stripe.Coupon": {
            "type": "object",
            "properties": {
                "amount_off": {
                    "type": "integer"
                },
                "created": {
                    "type": "integer"
                },
                "currency": {
                    "$ref": "#/definitions/stripe.Currency"
                },
                "deleted": {
                    "type": "boolean"
                },
                "duration": {
                    "$ref": "#/definitions/stripe.CouponDuration"
                },
                "duration_in_months": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "livemode": {
                    "type": "boolean"
                },
                "max_redemptions": {
                    "type": "integer"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "percent_off": {
                    "type": "number"
                },
                "redeem_by": {
                    "type": "integer"
                },
                "times_redeemed": {
                    "type": "integer"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "stripe.CouponDuration": {
            "type": "string",
            "enum": [
                "forever",
                "once",
                "repeating"
            ],
            "x-enum-varnames": [
                "CouponDurationForever",
                "CouponDurationOnce",
                "CouponDurationRepeating"
            ]
        },
        "stripe.Currency": {
            "type": "string",
            "enum": [
                "aed",
                "afn",
                "all",
                "amd",
                "ang",
                "aoa",
                "ars",
                "aud",
                "awg",
                "azn",
                "bam",
                "bbd",
                "bdt",
                "bgn",
                "bif",
                "bmd",
                "bnd",
                "bob",
                "brl",
                "bsd",
                "bwp",
                "bzd",
                "cad",
                "cdf",
                "chf",
                "clp",
                "cny",
                "cop",
                "crc",
                "cve",
                "czk",
                "djf",
                "dkk",
                "dop",
                "dzd",
                "eek",
                "egp",
                "etb",
                "eur",
                "fjd",
                "fkp",
                "gbp",
                "gel",
                "gip",
                "gmd",
                "gnf",
                "gtq",
                "gyd",
                "hkd",
                "hnl",
                "hrk",
                "htg",
                "huf",
                "idr",
                "ils",
                "inr",
                "isk",
                "jmd",
                "jpy",
                "kes",
                "kgs",
                "khr",
                "kmf",
                "krw",
                "kyd",
                "kzt",
                "lak",
                "lbp",
                "lkr",
                "lrd",
                "lsl",
                "ltl",
                "lvl",
                "mad",
                "mdl",
                "mga",
                "mkd",
                "mnt",
                "mop",
                "mro",
                "mur",
                "mvr",
                "mwk",
                "mxn",
                "myr",
                "mzn",
                "nad",
                "ngn",
                "nio",
                "nok",
                "npr",
                "nzd",
                "pab",
                "pen",
                "pgk",
                "php",
                "pkr",
                "pln",
                "pyg",
                "qar",
                "ron",
                "rsd",
                "rub",
                "rwf",
                "sar",
                "sbd",
                "scr",
                "sek",
                "sgd",
                "shp",
                "sll",
                "sos",
                "srd",
                "std",
                "svc",
                "szl",
                "thb",
                "tjs",
                "top",
                "try",
                "ttd",
                "twd",
                "tzs",
                "uah",
                "ugx",
                "usd",
                "uyu",
                "uzs",
                "vef",
                "vnd",
                "vuv",
                "wst",
                "xaf",
                "xcd",
                "xof",
                "xpf",
                "yer",
                "zar",
                "zmw"
            ],
            "x-enum-comments": {
                "CurrencyAED": "United Arab Emirates Dirham",
                "CurrencyAFN": "Afghan Afghani",
                "CurrencyALL": "Albanian Lek",
                "CurrencyAMD": "Armenian Dram",
                "CurrencyANG": "Netherlands Antillean Gulden",
                "CurrencyAOA": "Angolan Kwanza",
                "CurrencyARS": "Argentine Peso",
                "CurrencyAUD": "Australian Dollar",
                "CurrencyAWG": "Aruban Florin",
                "CurrencyAZN": "Azerbaijani Manat",
                "CurrencyBAM": "Bosnia \u0026 Herzegovina Convertible Mark",
                "CurrencyBBD": "Barbadian Dollar",
                "CurrencyBDT": "Bangladeshi Taka",
                "CurrencyBGN": "Bulgarian Lev",
                "CurrencyBIF": "Burundian Franc",
                "CurrencyBMD": "Bermudian Dollar",
                "CurrencyBND": "Brunei Dollar",
                "CurrencyBOB": "Bolivian Boliviano",
                "CurrencyBRL": "Brazilian Real",
                "CurrencyBSD": "Bahamian Dollar",
                "CurrencyBWP": "Botswana Pula",
                "CurrencyBZD": "Belize Dollar",
                "CurrencyCAD": "Canadian Dollar",
                "CurrencyCDF": "Congolese Franc",
                "CurrencyCHF": "Swiss Franc",
                "CurrencyCLP": "Chilean Peso",
                "CurrencyCNY": "Chinese Renminbi Yuan",
                "CurrencyCOP": "Colombian Peso",
                "CurrencyCRC": "Costa Rican Colón",
                "CurrencyCVE": "Cape Verdean Escudo",
                "CurrencyCZK": "Czech Koruna",
                "CurrencyDJF": "Djiboutian Franc",
                "CurrencyDKK": "Danish Krone",
                "CurrencyDOP": "Dominican Peso",
                "CurrencyDZD": "Algerian Dinar",
                "CurrencyEEK": "Estonian Kroon",
                "CurrencyEGP": "Egyptian Pound",
                "CurrencyETB": "Ethiopian Birr",
                "CurrencyEUR": "Euro",
                "CurrencyFJD": "Fijian Dollar",
                "CurrencyFKP": "Falkland Islands Pound",
                "CurrencyGBP": "British Pound",
                "CurrencyGEL": "Georgian Lari",
                "CurrencyGIP": "Gibraltar Pound",
                "CurrencyGMD": "Gambian Dalasi",
                "CurrencyGNF": "Guinean Franc",
                "CurrencyGTQ": "Guatemalan Quetzal",
                "CurrencyGYD": "Guyanese Dollar",
                "CurrencyHKD": "Hong Kong Dollar",
                "CurrencyHNL": "Honduran Lempira",
                "CurrencyHRK": "Croatian Kuna",
                "CurrencyHTG": "Haitian Gourde",
                "CurrencyHUF": "Hungarian Forint",
                "CurrencyIDR": "Indonesian Rupiah",
                "CurrencyILS": "Israeli New Sheqel",
                "CurrencyINR": "Indian Rupee",
                "CurrencyISK": "Icelandic Króna",
                "CurrencyJMD": "Jamaican Dollar",
                "CurrencyJPY": "Japanese Yen",
                "CurrencyKES": "Kenyan Shilling",
                "CurrencyKGS": "Kyrgyzstani Som",
                "CurrencyKHR": "Cambodian Riel",
                "CurrencyKMF": "Comorian Franc",
                "CurrencyKRW": "South Korean Won",
                "CurrencyKYD": "Cayman Islands Dollar",
                "CurrencyKZT": "Kazakhstani Tenge",
                "CurrencyLAK": "Lao Kip",
                "CurrencyLBP": "Lebanese Pound",
                "CurrencyLKR": "Sri Lankan Rupee",
                "CurrencyLRD": "Liberian Dollar",
                "CurrencyLSL": "Lesotho Loti",
                "CurrencyLTL": "Lithuanian Litas",
                "CurrencyLVL": "Latvian Lats",
                "CurrencyMAD": "Moroccan Dirham",
                "CurrencyMDL": "Moldovan Leu",
                "CurrencyMGA": "Malagasy Ariary",
                "CurrencyMKD": "Macedonian Denar",
                "CurrencyMNT": "Mongolian Tögrög",
                "CurrencyMOP": "Macanese Pataca",
                "CurrencyMRO": "Mauritanian Ouguiya",
                "CurrencyMUR": "Mauritian Rupee",
                "CurrencyMVR": "Maldivian Rufiyaa",
                "CurrencyMWK": "Malawian Kwacha",
                "CurrencyMXN": "Mexican Peso",
                "CurrencyMYR": "Malaysian Ringgit",
                "CurrencyMZN": "Mozambican Metical",
                "CurrencyNAD": "Namibian Dollar",
                "CurrencyNGN": "Nigerian Naira",
                "CurrencyNIO": "Nicaraguan Córdoba",
                "CurrencyNOK": "Norwegian Krone",
                "CurrencyNPR": "Nepalese Rupee",
                "CurrencyNZD": "New Zealand Dollar",
                "CurrencyPAB": "Panamanian Balboa",
                "CurrencyPEN": "Peruvian Nuevo Sol",
                "CurrencyPGK": "Papua New Guinean Kina",
                "CurrencyPHP": "Philippine Peso",
                "CurrencyPKR": "Pakistani Rupee",
                "CurrencyPLN": "Polish Złoty",
                "CurrencyPYG": "Paraguayan Guaraní",
                "CurrencyQAR": "Qatari Riyal",
                "CurrencyRON": "Romanian Leu",
                "CurrencyRSD": "Serbian Dinar",
                "CurrencyRUB": "Russian Ruble",
                "CurrencyRWF": "Rwandan Franc",
                "CurrencySAR": "Saudi Riyal",
                "CurrencySBD": "Solomon Islands Dollar",
                "CurrencySCR": "Seychellois Rupee",
                "CurrencySEK": "Swedish Krona",
                "CurrencySGD": "Singapore Dollar",
                "CurrencySHP": "Saint Helenian Pound",
                "CurrencySLL": "Sierra Leonean Leone",
                "CurrencySOS": "Somali Shilling",
                "CurrencySRD": "Surinamese Dollar",
                "CurrencySTD": "São Tomé and Príncipe Dobra",
                "CurrencySVC": "Salvadoran Colón",
                "CurrencySZL": "Swazi Lilangeni",
                "CurrencyTHB": "Thai Baht",
                "CurrencyTJS": "Tajikistani Somoni",
                "CurrencyTOP": "Tongan Paʻanga",
                "CurrencyTRY": "Turkish Lira",
                "CurrencyTTD": "Trinidad and Tobago Dollar",
                "CurrencyTWD": "New Taiwan Dollar",
                "CurrencyTZS": "Tanzanian Shilling",
                "CurrencyUAH": "Ukrainian Hryvnia",
                "CurrencyUGX": "Ugandan Shilling",
                "CurrencyUSD": "United States Dollar",
                "CurrencyUYU": "Uruguayan Peso",
                "CurrencyUZS": "Uzbekistani Som",
                "CurrencyVEF": "Venezuelan Bolívar",
                "CurrencyVND": "Vietnamese Đồng",
                "CurrencyVUV": "Vanuatu Vatu",
                "CurrencyWST": "Samoan Tala",
                "CurrencyXAF": "Central African Cfa Franc",
                "CurrencyXCD": "East Caribbean Dollar",
                "CurrencyXOF": "West African Cfa Franc",
                "CurrencyXPF": "Cfp Franc",
                "CurrencyYER": "Yemeni Rial",
                "CurrencyZAR": "South African Rand",
                "CurrencyZMW": "Zambian Kwacha"
            },
            "x-enum-varnames": [
                "CurrencyAED",
                "CurrencyAFN",
                "CurrencyALL",
                "CurrencyAMD",
                "CurrencyANG",
                "CurrencyAOA",
                "CurrencyARS",
                "CurrencyAUD",
                "CurrencyAWG",
                "CurrencyAZN",
                "CurrencyBAM",
                "CurrencyBBD",
                "CurrencyBDT",
                "CurrencyBGN",
                "CurrencyBIF",
                "CurrencyBMD",
                "CurrencyBND",
                "CurrencyBOB",
                "CurrencyBRL",
                "CurrencyBSD",
                "CurrencyBWP",
                "CurrencyBZD",
                "CurrencyCAD",
                "CurrencyCDF",
                "CurrencyCHF",
                "CurrencyCLP",
                "CurrencyCNY",
                "CurrencyCOP",
                "CurrencyCRC",
                "CurrencyCVE",
                "CurrencyCZK",
                "CurrencyDJF",
                "CurrencyDKK",
                "CurrencyDOP",
                "CurrencyDZD",
                "CurrencyEEK",
                "CurrencyEGP",
                "CurrencyETB",
                "CurrencyEUR",
                "CurrencyFJD",
                "CurrencyFKP",
                "CurrencyGBP",
                "CurrencyGEL",
                "CurrencyGIP",
                "CurrencyGMD",
                "CurrencyGNF",
                "CurrencyGTQ",
                "CurrencyGYD",
                "CurrencyHKD",
                "CurrencyHNL",
                "CurrencyHRK",
                "CurrencyHTG",
                "CurrencyHUF",
                "CurrencyIDR",
                "CurrencyILS",
                "CurrencyINR",
                "CurrencyISK",
                "CurrencyJMD",
                "CurrencyJPY",
                "CurrencyKES",
                "CurrencyKGS",
                "CurrencyKHR",
                "CurrencyKMF",
                "CurrencyKRW",
                "CurrencyKYD",
                "CurrencyKZT",
                "CurrencyLAK",
                "CurrencyLBP",
                "CurrencyLKR",
                "CurrencyLRD",
                "CurrencyLSL",
                "CurrencyLTL",
                "CurrencyLVL",
                "CurrencyMAD",
                "CurrencyMDL",
                "CurrencyMGA",
                "CurrencyMKD",
                "CurrencyMNT",
                "CurrencyMOP",
                "CurrencyMRO",
                "CurrencyMUR",
                "CurrencyMVR",
                "CurrencyMWK",
                "CurrencyMXN",
                "CurrencyMYR",
                "CurrencyMZN",
                "CurrencyNAD",
                "CurrencyNGN",
                "CurrencyNIO",
                "CurrencyNOK",
                "CurrencyNPR",
                "CurrencyNZD",
                "CurrencyPAB",
                "CurrencyPEN",
                "CurrencyPGK",
                "CurrencyPHP",
                "CurrencyPKR",
                "CurrencyPLN",
                "CurrencyPYG",
                "CurrencyQAR",
                "CurrencyRON",
                "CurrencyRSD",
                "CurrencyRUB",
                "CurrencyRWF",
                "CurrencySAR",
                "CurrencySBD",
                "CurrencySCR",
                "CurrencySEK",
                "CurrencySGD",
                "CurrencySHP",
                "CurrencySLL",
                "CurrencySOS",
                "CurrencySRD",
                "CurrencySTD",
                "CurrencySVC",
                "CurrencySZL",
                "CurrencyTHB",
                "CurrencyTJS",
                "CurrencyTOP",
                "CurrencyTRY",
                "CurrencyTTD",
                "CurrencyTWD",
                "CurrencyTZS",
                "CurrencyUAH",
                "CurrencyUGX",
                "CurrencyUSD",
                "CurrencyUYU",
                "CurrencyUZS",
                "CurrencyVEF",
                "CurrencyVND",
                "CurrencyVUV",
                "CurrencyWST",
                "CurrencyXAF",
                "CurrencyXCD",
                "CurrencyXOF",
                "CurrencyXPF",
                "CurrencyYER",
                "CurrencyZAR",
                "CurrencyZMW"
            ]
        },
        "stripe.Customer": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/stripe.Address"
                },
                "balance": {
                    "type": "integer"
                },
                "created": {
                    "type": "integer"
                },
                "currency": {
                    "$ref": "#/definitions/stripe.Currency"
                },
                "default_source": {
                    "$ref": "#/definitions/stripe.PaymentSource"
                },
                "deleted": {
                    "type": "boolean"
                },
                "delinquent": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "discount": {
                    "$ref": "#/definitions/stripe.Discount"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "invoice_prefix": {
                    "type": "string"
                },
                "invoice_settings": {
                    "$ref": "#/definitions/stripe.CustomerInvoiceSettings"
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "next_invoice_sequence": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "preferred_locales": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shipping": {
                    "$ref": "#/definitions/stripe.CustomerShippingDetails"
                },
                "sources": {
                    "$ref": "#/definitions/stripe.SourceList"
                },
                "subscriptions": {
                    "$ref": "#/definitions/stripe.SubscriptionList"
                },
                "tax_exempt": {
                    "$ref": "#/definitions/stripe.CustomerTaxExempt"
                },
                "tax_ids": {
                    "$ref": "#/definitions/stripe.TaxIDList"
                }
            }
        },
        "stripe.CustomerInvoiceCustomField": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "stripe.CustomerInvoiceSettings": {
            "type": "object",
            "properties": {
                "custom_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.CustomerInvoiceCustomField"
                    }
                },
                "default_payment_method": {
                    "$ref": "#/definitions/stripe.PaymentMethod"
                },
                "footer": {
                    "type": "string"
                }
            }
        },
        "stripe.CustomerShippingDetails": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/stripe.Address"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "stripe.CustomerTaxExempt": {
            "type": "string",
            "enum": [
                "exempt",
                "none",
                "reverse"
            ],
            "x-enum-varnames": [
                "CustomerTaxExemptExempt",
                "CustomerTaxExemptNone",
                "CustomerTaxExemptReverse"
            ]
        },
        "stripe.DOB": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "integer"
                },
                "month": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "stripe.DeclineCode": {
            "type": "string",
            "enum": [
                "authentication_required",
                "approve_with_id",
                "call_issuer",
                "card_not_supported",
                "card_velocity_exceeded",
                "currency_not_supported",
                "do_not_honor",
                "do_not_try_again",
                "duplicate_transaction",
                "expired_card",
                "fraudulent",
                "generic_decline",
                "incorrect_number",
                "incorrect_cvc",
                "incorrect_pin",
                "incorrect_zip",
                "insufficient_funds",
                "invalid_account",
                "invalid_amount",
                "invalid_cvc",
                "invalid_expiry_year",
                "invalid_number",
                "invalid_pin",
                "issuer_not_available",
                "lost_card",
                "merchant_blacklist",
                "new_account_information_available",
                "no_action_taken",
                "not_permitted",
                "pickup_card",
                "pin_try_exceeded",
                "processing_error",
                "reenter_transaction",
                "restricted_card",
                "revocation_of_all_authorizations",
                "revocation_of_authorization",
                "security_violation",
                "service_not_allowed",
                "stolen_card",
                "stop_payment_order",
                "testmode_decline",
                "transaction_not_allowed",
                "try_again_later",
                "withdrawal_count_limit_exceeded"
            ],
            "x-enum-varnames": [
                "DeclineCodeAuthenticationRequired",
                "DeclineCodeApproveWithID",
                "DeclineCodeCallIssuer",
                "DeclineCodeCardNotSupported",
                "DeclineCodeCardVelocityExceeded",
                "DeclineCodeCurrencyNotSupported",
                "DeclineCodeDoNotHonor",
                "DeclineCodeDoNotTryAgain",
                "DeclineCodeDuplicateTransaction",
                "DeclineCodeExpiredCard",
                "DeclineCodeFraudulent",
                "DeclineCodeGenericDecline",
                "DeclineCodeIncorrectNumber",
                "DeclineCodeIncorrectCVC",
                "DeclineCodeIncorrectPIN",
                "DeclineCodeIncorrectZip",
                "DeclineCodeInsufficientFunds",
                "DeclineCodeInvalidAccount",
                "DeclineCodeInvalidAmount",
                "DeclineCodeInvalidCVC",
                "DeclineCodeInvalidExpiryYear",
                "DeclineCodeInvalidNumber",
                "DeclineCodeInvalidPIN",
                "DeclineCodeIssuerNotAvailable",
                "DeclineCodeLostCard",
                "DeclineCodeMerchantBlacklist",
                "DeclineCodeNewAccountInformationAvailable",
                "DeclineCodeNoActionTaken",
                "DeclineCodeNotPermitted",
                "DeclineCodePickupCard",
                "DeclineCodePINTryExceeded",
                "DeclineCodeProcessingError",
                "DeclineCodeReenterTransaction",
                "DeclineCodeRestrictedCard",
                "DeclineCodeRevocationOfAllAuthorizations",
                "DeclineCodeRevocationOfAuthorization",
                "DeclineCodeSecurityViolation",
                "DeclineCodeServiceNotAllowed",
                "DeclineCodeStolenCard",
                "DeclineCodeStopPaymentOrder",
                "DeclineCodeTestModeDecline",
                "DeclineCodeTransactionNotAllowed",
                "DeclineCodeTryAgainLater",
                "DeclineCodeWithdrawalCountLimitExceeded"
            ]
        },
        "stripe.Discount": {
            "type": "object",
            "properties": {
                "coupon": {
                    "$ref": "#/definitions/stripe.Coupon"
                },
                "customer": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "end": {
                    "type": "integer"
                },
                "start": {
                    "type": "integer"
                },
                "subscription": {
                    "type": "string"
                }
            }
        },
        "stripe.Dispute": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "balance_transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.BalanceTransaction"
                    }
                },
                "charge": {
                    "$ref": "#/definitions/stripe.Charge"
                },
                "created": {
                    "type": "integer"
                },
                "currency": {
                    "$ref": "#/definitions/stripe.Currency"
                },
                "evidence": {
                    "$ref": "#/definitions/stripe.DisputeEvidence"
                },
                "evidence_details": {
                    "$ref": "#/definitions/stripe.EvidenceDetails"
                },
                "id": {
                    "type": "string"
                },
                "is_charge_refundable": {
                    "type": "boolean"
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "payment_intent": {
                    "$ref": "#/definitions/stripe.PaymentIntent"
                },
                "reason": {
                    "$ref": "#/definitions/stripe.DisputeReason"
                },
                "status": {
                    "$ref": "#/definitions/stripe.DisputeStatus"
                }
            }
        },
        "stripe.DisputeEvidence": {
            "type": "object",
            "properties": {
                "access_activity_log": {
                    "type": "string"
                },
                "billing_address": {
                    "type": "string"
                },
                "cancellation_policy": {
                    "$ref": "#/definitions/stripe.File"
                },
                "cancellation_policy_disclosure": {
                    "type": "string"
                },
                "cancellation_rebuttal": {
                    "type": "string"
                },
                "customer_communication": {
                    "$ref": "#/definitions/stripe.File"
                },
                "customer_email_address": {
                    "type": "string"
                },
                "customer_name": {
                    "type": "string"
                },
                "customer_purchase_ip": {
                    "type": "string"
                },
                "customer_signature": {
                    "$ref": "#/definitions/stripe.File"
                },
                "duplicate_charge_documentation": {
                    "$ref": "#/definitions/stripe.File"
                },
                "duplicate_charge_explanation": {
                    "type": "string"
                },
                "duplicate_charge_id": {
                    "type": "string"
                },
                "product_description": {
                    "type": "string"
                },
                "receipt": {
                    "$ref": "#/definitions/stripe.File"
                },
                "refund_policy": {
                    "$ref": "#/definitions/stripe.File"
                },
                "refund_policy_disclosure": {
                    "type": "string"
                },
                "refund_refusal_explanation": {
                    "type": "string"
                },
                "service_date": {
                    "type": "string"
                },
                "service_documentation": {
                    "$ref": "#/definitions/stripe.File"
                },
                "shipping_address": {
                    "type": "string"
                },
                "shipping_carrier": {
                    "type": "string"
                },
                "shipping_date": {
                    "type": "string"
                },
                "shipping_documentation": {
                    "$ref": "#/definitions/stripe.File"
                },
                "shipping_tracking_number": {
                    "type": "string"
                },
                "uncategorized_file": {
                    "$ref": "#/definitions/stripe.File"
                },
                "uncategorized_text": {
                    "type": "string"
                }
            }
        },
        "stripe.DisputeReason": {
            "type": "string",
            "enum": [
                "credit_not_processed",
                "duplicate",
                "fraudulent",
                "general",
                "product_not_received",
                "product_unacceptable",
                "subscription_canceled",
                "unrecognized"
            ],
            "x-enum-varnames": [
                "DisputeReasonCreditNotProcessed",
                "DisputeReasonDuplicate",
                "DisputeReasonFraudulent",
                "DisputeReasonGeneral",
                "DisputeReasonProductNotReceived",
                "DisputeReasonProductUnacceptable",
                "DisputeReasonSubscriptionCanceled",
                "DisputeReasonUnrecognized"
            ]
        },
        "stripe.DisputeStatus": {
            "type": "string",
            "enum": [
                "charge_refunded",
                "lost",
                "needs_response",
                "under_review",
                "warning_closed",
                "warning_needs_response",
                "warning_under_review",
                "won"
            ],
            "x-enum-varnames": [
                "DisputeStatusChargeRefunded",
                "DisputeStatusLost",
                "DisputeStatusNeedsResponse",
                "DisputeStatusUnderReview",
                "DisputeStatusWarningClosed",
                "DisputeStatusWarningNeedsResponse",
                "DisputeStatusWarningUnderReview",
                "DisputeStatusWon"
            ]
        },
        "stripe.Error": {
            "type": "object",
            "properties": {
                "charge": {
                    "type": "string"
                },
                "code": {
                    "$ref": "#/definitions/stripe.ErrorCode"
                },
                "decline_code": {
                    "$ref": "#/definitions/stripe.DeclineCode"
                },
                "doc_url": {
                    "type": "string"
                },
                "error": {
                    "description": "OAuth specific Error properties. Named OAuthError because of name conflict.",
                    "type": "string"
                },
                "error_description": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "param": {
                    "type": "string"
                },
                "payment_intent": {
                    "$ref": "#/definitions/stripe.PaymentIntent"
                },
                "payment_method": {
                    "$ref": "#/definitions/stripe.PaymentMethod"
                },
                "request_id": {
                    "type": "string"
                },
                "setup_intent": {
                    "$ref": "#/definitions/stripe.SetupIntent"
                },
                "source": {
                    "$ref": "#/definitions/stripe.PaymentSource"
                },
                "status": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/stripe.ErrorType"
                }
            }
        },
        "stripe.ErrorCode": {
            "type": "string",
            "enum": [
                "account_already_exists",
                "account_country_invalid_address",
                "account_invalid",
                "account_number_invalid",
                "alipay_upgrade_required",
                "amount_too_large",
                "amount_too_small",
                "api_key_expired",
                "authentication_required",
                "balance_insufficient",
                "bank_account_exists",
                "bank_account_unusable",
                "bank_account_unverified",
                "bitcoin_upgrade_required",
                "card_declined",
                "charge_already_captured",
                "charge_already_refunded",
                "charge_disputed",
                "charge_exceeds_source_limit",
                "charge_expired_for_capture",
                "country_unsupported",
                "coupon_expired",
                "customer_max_subscriptions",
                "email_invalid",
                "expired_card",
                "idempotency_key_in_use",
                "incorrect_address",
                "incorrect_cvc",
                "incorrect_number",
                "incorrect_zip",
                "instant_payouts_unsupported",
                "invalid_card_type",
                "invalid_charge_amount",
                "invalid_cvc",
                "invalid_expiry_month",
                "invalid_expiry_year",
                "invalid_number",
                "invalid_source_usage",
                "invoice_no_customer_line_items",
                "invoice_no_subscription_line_items",
                "invoice_not_editable",
                "invoice_upcoming_none",
                "livemode_mismatch",
                "lock_timeout",
                "missing",
                "not_allowed_on_standard_account",
                "order_creation_failed",
                "order_required_settings",
                "order_status_invalid",
                "order_upstream_timeout",
                "out_of_inventory",
                "parameter_invalid_empty",
                "parameter_invalid_integer",
                "parameter_invalid_string_blank",
                "parameter_invalid_string_empty",
                "parameter_missing",
                "parameter_unknown",
                "parameters_exclusive",
                "payment_intent_authentication_failure",
                "payment_intent_incompatible_payment_method",
                "payment_intent_invalid_parameter",
                "payment_intent_payment_attempt_failed",
                "payment_intent_unexpected_state",
                "payment_method_unactivated",
                "payment_method_unexpected_state",
                "payouts_not_allowed",
                "platform_api_key_expired",
                "postal_code_invalid",
                "processing_error",
                "product_inactive",
                "rate_limit",
                "resource_already_exists",
                "resource_missing",
                "routing_number_invalid",
                "secret_key_required",
                "sepa_unsupported_account",
                "setup_attempt_failed",
                "setup_intent_authentication_failure",
                "setup_intent_unexpected_state",
                "shipping_calculation_failed",
                "sku_inactive",
                "state_unsupported",
                "tax_id_invalid",
                "taxes_calculation_failed",
                "testmode_charges_only",
                "tls_version_unsupported",
                "token_already_used",
                "token_in_use",
                "transfers_not_allowed",
                "upstream_order_creation_failed",
                "url_invalid",
                "invalid_swipe_data"
            ],
            "x-enum-varnames": [
                "ErrorCodeAccountAlreadyExists",
                "ErrorCodeAccountCountryInvalidAddress",
                "ErrorCodeAccountInvalid",
                "ErrorCodeAccountNumberInvalid",
                "ErrorCodeAlipayUpgradeRequired",
                "ErrorCodeAmountTooLarge",
                "ErrorCodeAmountTooSmall",
                "ErrorCodeAPIKeyExpired",
                "ErrorCodeAuthenticationRequired",
                "ErrorCodeBalanceInsufficient",
                "ErrorCodeBankAccountExists",
                "ErrorCodeBankAccountUnusable",
                "ErrorCodeBankAccountUnverified",
                "ErrorCodeBitcoinUpgradeRequired",
                "ErrorCodeCardDeclined",
                "ErrorCodeChargeAlreadyCaptured",
                "ErrorCodeChargeAlreadyRefunded",
                "ErrorCodeChargeDisputed",
                "ErrorCodeChargeExceedsSourceLimit",
                "ErrorCodeChargeExpiredForCapture",
                "ErrorCodeCountryUnsupported",
                "ErrorCodeCouponExpired",
                "ErrorCodeCustomerMaxSubscriptions",
                "ErrorCodeEmailInvalid",
                "ErrorCodeExpiredCard",
                "ErrorCodeIdempotencyKeyInUse",
                "ErrorCodeIncorrectAddress",
                "ErrorCodeIncorrectCVC",
                "ErrorCodeIncorrectNumber",
                "ErrorCodeIncorrectZip",
                "ErrorCodeInstantPayoutsUnsupported",
                "ErrorCodeInvalidCardType",
                "ErrorCodeInvalidChargeAmount",
                "ErrorCodeInvalidCVC",
                "ErrorCodeInvalidExpiryMonth",
                "ErrorCodeInvalidExpiryYear",
                "ErrorCodeInvalidNumber",
                "ErrorCodeInvalidSourceUsage",
                "ErrorCodeInvoiceNoCustomerLineItems",
                "ErrorCodeInvoiceNoSubscriptionLineItems",
                "ErrorCodeInvoiceNotEditable",
                "ErrorCodeInvoiceUpcomingNone",
                "ErrorCodeLivemodeMismatch",
                "ErrorCodeLockTimeout",
                "ErrorCodeMissing",
                "ErrorCodeNotAllowedOnStandardAccount",
                "ErrorCodeOrderCreationFailed",
                "ErrorCodeOrderRequiredSettings",
                "ErrorCodeOrderStatusInvalid",
                "ErrorCodeOrderUpstreamTimeout",
                "ErrorCodeOutOfInventory",
                "ErrorCodeParameterInvalidEmpty",
                "ErrorCodeParameterInvalidInteger",
                "ErrorCodeParameterInvalidStringBlank",
                "ErrorCodeParameterInvalidStringEmpty",
                "ErrorCodeParameterMissing",
                "ErrorCodeParameterUnknown",
                "ErrorCodeParametersExclusive",
                "ErrorCodePaymentIntentAuthenticationFailure",
                "ErrorCodePaymentIntentIncompatiblePaymentMethod",
                "ErrorCodePaymentIntentInvalidParameter",
                "ErrorCodePaymentIntentPaymentAttemptFailed",
                "ErrorCodePaymentIntentUnexpectedState",
                "ErrorCodePaymentMethodUnactivated",
                "ErrorCodePaymentMethodUnexpectedState",
                "ErrorCodePayoutsNotAllowed",
                "ErrorCodePlatformAPIKeyExpired",
                "ErrorCodePostalCodeInvalid",
                "ErrorCodeProcessingError",
                "ErrorCodeProductInactive",
                "ErrorCodeRateLimit",
                "ErrorCodeResourceAlreadyExists",
                "ErrorCodeResourceMissing",
                "ErrorCodeRoutingNumberInvalid",
                "ErrorCodeSecretKeyRequired",
                "ErrorCodeSepaUnsupportedAccount",
                "ErrorCodeSetupAttemptFailed",
                "ErrorCodeSetupIntentAuthenticationFailure",
                "ErrorCodeSetupIntentUnexpectedState",
                "ErrorCodeShippingCalculationFailed",
                "ErrorCodeSkuInactive",
                "ErrorCodeStateUnsupported",
                "ErrorCodeTaxIDInvalid",
                "ErrorCodeTaxesCalculationFailed",
                "ErrorCodeTestmodeChargesOnly",
                "ErrorCodeTLSVersionUnsupported",
                "ErrorCodeTokenAlreadyUsed",
                "ErrorCodeTokenInUse",
                "ErrorCodeTransfersNotAllowed",
                "ErrorCodeUpstreamOrderCreationFailed",
                "ErrorCodeURLInvalid",
                "ErrorCodeInvalidSwipeData"
            ]
        },
        "stripe.ErrorType": {
            "type": "string",
            "enum": [
                "api_error",
                "api_connection_error",
                "authentication_error",
                "card_error",
                "invalid_request_error",
                "more_permissions_required",
                "rate_limit_error"
            ],
            "x-enum-varnames": [
                "ErrorTypeAPI",
                "ErrorTypeAPIConnection",
                "ErrorTypeAuthentication",
                "ErrorTypeCard",
                "ErrorTypeInvalidRequest",
                "ErrorTypePermission",
                "ErrorTypeRateLimit"
            ]
        },
        "stripe.EvidenceDetails": {
            "type": "object",
            "properties": {
                "due_by": {
                    "type": "integer"
                },
                "has_evidence": {
                    "type": "boolean"
                },
                "past_due": {
                    "type": "boolean"
                },
                "submission_count": {
                    "type": "integer"
                }
            }
        },
        "stripe.ExternalAccount": {
            "type": "object",
            "properties": {
                "bankAccount": {
                    "description": "BankAccount is a bank account attached to an account. Populated only if\nthe external account is a bank account.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/stripe.BankAccount"
                        }
                    ]
                },
                "card": {
                    "description": "Card is a card attached to an account. Populated only if the external\naccount is a card.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/stripe.Card"
                        }
                    ]
                },
                "id": {
                    "type": "string"
                },
                "object": {
                    "$ref": "#/definitions/stripe.ExternalAccountType"
                }
            }
        },
        "stripe.ExternalAccountList": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Values contains any external accounts (bank accounts and/or cards)\ncurrently attached to this account.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.ExternalAccount"
                    }
                },
                "has_more": {
                    "type": "boolean"
                },
                "total_count": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.ExternalAccountType": {
            "type": "string",
            "enum": [
                "bank_account",
                "card"
            ],
            "x-enum-varnames": [
                "ExternalAccountTypeBankAccount",
                "ExternalAccountTypeCard"
            ]
        },
        "stripe.FeeRefund": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "balance_transaction": {
                    "$ref": "#/definitions/stripe.BalanceTransaction"
                },
                "created": {
                    "type": "integer"
                },
                "currency": {
                    "$ref": "#/definitions/stripe.Currency"
                },
                "fee": {
                    "$ref": "#/definitions/stripe.ApplicationFee"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "stripe.FeeRefundList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.FeeRefund"
                    }
                },
                "has_more": {
                    "type": "boolean"
                },
                "total_count": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.File": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "integer"
                },
                "filename": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/stripe.FileLinkList"
                },
                "purpose": {
                    "$ref": "#/definitions/stripe.FilePurpose"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.FileLink": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "integer"
                },
                "expired": {
                    "type": "boolean"
                },
                "expires_at": {
                    "type": "integer"
                },
                "file": {
                    "$ref": "#/definitions/stripe.File"
                },
                "id": {
                    "type": "string"
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "object": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.FileLinkList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.FileLink"
                    }
                },
                "has_more": {
                    "type": "boolean"
                },
                "total_count": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.FilePurpose": {
            "type": "string",
            "enum": [
                "additional_verification",
                "business_icon",
                "business_logo",
                "customer_signature",
                "dispute_evidence",
                "finance_report_run",
                "founders_stock_document",
                "identity_document",
                "pci_document",
                "sigma_scheduled_query",
                "tax_document_user_upload"
            ],
            "x-enum-varnames": [
                "FilePurposeAdditionalVerification",
                "FilePurposeBusinessIcon",
                "FilePurposeBusinessLogo",
                "FilePurposeCustomerSignature",
                "FilePurposeDisputeEvidence",
                "FilePurposeFinanceReportRun",
                "FilePurposeFoundersStockDocument",
                "FilePurposeIdentityDocument",
                "FilePurposePCIDocument",
                "FilePurposeSigmaScheduledQuery",
                "FilePurposeTaxDocumentUserUpload"
            ]
        },
        "stripe.FraudDetails": {
            "type": "object",
            "properties": {
                "stripe_report": {
                    "$ref": "#/definitions/stripe.ChargeFraudStripeReport"
                },
                "user_report": {
                    "$ref": "#/definitions/stripe.ChargeFraudUserReport"
                }
            }
        },
        "stripe.IdentityVerificationStatus": {
            "type": "string",
            "enum": [
                "pending",
                "unverified",
                "verified"
            ],
            "x-enum-varnames": [
                "IdentityVerificationStatusPending",
                "IdentityVerificationStatusUnverified",
                "IdentityVerificationStatusVerified"
            ]
        },
        "stripe.Invoice": {
            "type": "object",
            "properties": {
                "account_country": {
                    "type": "string"
                },
                "account_name": {
                    "type": "string"
                },
                "amount_due": {
                    "type": "integer"
                },
                "amount_paid": {
                    "type": "integer"
                },
                "amount_remaining": {
                    "type": "integer"
                },
                "application_fee_amount": {
                    "type": "integer"
                },
                "attempt_count": {
                    "type": "integer"
                },
                "attempted": {
                    "type": "boolean"
                },
                "auto_advance": {
                    "type": "boolean"
                },
                "billing_reason": {
                    "$ref": "#/definitions/stripe.InvoiceBillingReason"
                },
                "charge": {
                    "$ref": "#/definitions/stripe.Charge"
                },
                "collection_method": {
                    "$ref": "#/definitions/stripe.InvoiceCollectionMethod"
                },
                "created": {
                    "type": "integer"
                },
                "currency": {
                    "$ref": "#/definitions/stripe.Currency"
                },
                "custom_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.InvoiceCustomField"
                    }
                },
                "customer": {
                    "$ref": "#/definitions/stripe.Customer"
                },
                "customer_address": {
                    "$ref": "#/definitions/stripe.Address"
                },
                "customer_email": {
                    "type": "string"
                },
                "customer_name": {
                    "type": "string"
                },
                "customer_phone": {
                    "type": "string"
                },
                "customer_shipping": {
                    "$ref": "#/definitions/stripe.CustomerShippingDetails"
                },
                "customer_tax_exempt": {
                    "$ref": "#/definitions/stripe.CustomerTaxExempt"
                },
                "customer_tax_ids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.InvoiceCustomerTaxID"
                    }
                },
                "default_payment_method": {
                    "$ref": "#/definitions/stripe.PaymentMethod"
                },
                "default_source": {
                    "$ref": "#/definitions/stripe.PaymentSource"
                },
                "default_tax_rates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.TaxRate"
                    }
                },
                "description": {
                    "type": "string"
                },
                "discount": {
                    "$ref": "#/definitions/stripe.Discount"
                },
                "due_date": {
                    "type": "integer"
                },
                "ending_balance": {
                    "type": "integer"
                },
                "footer": {
                    "type": "string"
                },
                "hosted_invoice_url": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "invoice_pdf": {
                    "type": "string"
                },
                "lines": {
                    "$ref": "#/definitions/stripe.InvoiceLineList"
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "next_payment_attempt": {
                    "type": "integer"
                },
                "number": {
                    "type": "string"
                },
                "paid": {
                    "type": "boolean"
                },
                "payment_intent": {
                    "$ref": "#/definitions/stripe.PaymentIntent"
                },
                "period_end": {
                    "type": "integer"
                },
                "period_start": {
                    "type": "integer"
                },
                "post_payment_credit_notes_amount": {
                    "type": "integer"
                },
                "pre_payment_credit_notes_amount": {
                    "type": "integer"
                },
                "receipt_number": {
                    "type": "string"
                },
                "starting_balance": {
                    "type": "integer"
                },
                "statement_descriptor": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/stripe.InvoiceStatus"
                },
                "status_transitions": {
                    "$ref": "#/definitions/stripe.InvoiceStatusTransitions"
                },
                "subscription": {
                    "$ref": "#/definitions/stripe.Subscription"
                },
                "subscription_proration_date": {
                    "type": "integer"
                },
                "subtotal": {
                    "type": "integer"
                },
                "tax": {
                    "type": "integer"
                },
                "tax_percent": {
                    "description": "This field is deprecated and we recommend that you use TaxRates instead.",
                    "type": "number"
                },
                "threshold_reason": {
                    "$ref": "#/definitions/stripe.InvoiceThresholdReason"
                },
                "total": {
                    "type": "integer"
                },
                "total_tax_amounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.InvoiceTaxAmount"
                    }
                },
                "transfer_data": {
                    "$ref": "#/definitions/stripe.InvoiceTransferData"
                },
                "webhooks_delivered_at": {
                    "type": "integer"
                }
            }
        },
        "stripe.InvoiceBillingReason": {
            "type": "string",
            "enum": [
                "manual",
                "subscription",
                "subscription_create",
                "subscription_cycle",
                "subscription_threshold",
                "subscription_update",
                "upcoming"
            ],
            "x-enum-varnames": [
                "InvoiceBillingReasonManual",
                "InvoiceBillingReasonSubscription",
                "InvoiceBillingReasonSubscriptionCreate",
                "InvoiceBillingReasonSubscriptionCycle",
                "InvoiceBillingReasonSubscriptionThreshold",
                "InvoiceBillingReasonSubscriptionUpdate",
                "InvoiceBillingReasonUpcoming"
            ]
        },
        "stripe.InvoiceCollectionMethod": {
            "type": "string",
            "enum": [
                "charge_automatically",
                "send_invoice"
            ],
            "x-enum-varnames": [
                "InvoiceCollectionMethodChargeAutomatically",
                "InvoiceCollectionMethodSendInvoice"
            ]
        },
        "stripe.InvoiceCustomField": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "stripe.InvoiceCustomerTaxID": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/stripe.TaxIDType"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "stripe.InvoiceLine": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "currency": {
                    "$ref": "#/definitions/stripe.Currency"
                },
                "description": {
                    "type": "string"
                },
                "discountable": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "invoice_item": {
                    "type": "string"
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "period": {
                    "$ref": "#/definitions/stripe.Period"
                },
                "plan": {
                    "$ref": "#/definitions/stripe.Plan"
                },
                "proration": {
                    "type": "boolean"
                },
                "quantity": {
                    "type": "integer"
                },
                "subscription": {
                    "type": "string"
                },
                "subscription_item": {
                    "type": "string"
                },
                "tax_amounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.InvoiceTaxAmount"
                    }
                },
                "tax_rates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.TaxRate"
                    }
                },
                "type": {
                    "$ref": "#/definitions/stripe.InvoiceLineType"
                },
                "unified_proration": {
                    "type": "boolean"
                }
            }
        },
        "stripe.InvoiceLineList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.InvoiceLine"
                    }
                },
                "has_more": {
                    "type": "boolean"
                },
                "total_count": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.InvoiceLineType": {
            "type": "string",
            "enum": [
                "invoiceitem",
                "subscription"
            ],
            "x-enum-varnames": [
                "InvoiceLineTypeInvoiceItem",
                "InvoiceLineTypeSubscription"
            ]
        },
        "stripe.InvoiceStatus": {
            "type": "string",
            "enum": [
                "draft",
                "open",
                "paid",
                "uncollectible",
                "void"
            ],
            "x-enum-varnames": [
                "InvoiceStatusDraft",
                "InvoiceStatusOpen",
                "InvoiceStatusPaid",
                "InvoiceStatusUncollectible",
                "InvoiceStatusVoid"
            ]
        },
        "stripe.InvoiceStatusTransitions": {
            "type": "object",
            "properties": {
                "finalized_at": {
                    "type": "integer"
                },
                "marked_uncollectible_at": {
                    "type": "integer"
                },
                "paid_at": {
                    "type": "integer"
                },
                "voided_at": {
                    "type": "integer"
                }
            }
        },
        "stripe.InvoiceTaxAmount": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "inclusive": {
                    "type": "boolean"
                },
                "tax_rate": {
                    "$ref": "#/definitions/stripe.TaxRate"
                }
            }
        },
        "stripe.InvoiceThresholdReason": {
            "type": "object",
            "properties": {
                "amount_gte": {
                    "type": "integer"
                },
                "item_reasons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.InvoiceThresholdReasonItemReason"
                    }
                }
            }
        },
        "stripe.InvoiceThresholdReasonItemReason": {
            "type": "object",
            "properties": {
                "line_item_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "usage_gte": {
                    "type": "integer"
                }
            }
        },
        "stripe.InvoiceTransferData": {
            "type": "object",
            "properties": {
                "destination": {
                    "$ref": "#/definitions/stripe.Account"
                }
            }
        },
        "stripe.Mandate": {
            "type": "object",
            "properties": {
                "customer_acceptance": {
                    "$ref": "#/definitions/stripe.MandateCustomerAcceptance"
                },
                "id": {
                    "type": "string"
                },
                "livemode": {
                    "type": "boolean"
                },
                "multi_use": {
                    "$ref": "#/definitions/stripe.MandateMultiUse"
                },
                "object": {
                    "type": "string"
                },
                "payment_method": {
                    "$ref": "#/definitions/stripe.PaymentMethod"
                },
                "payment_method_details": {
                    "$ref": "#/definitions/stripe.MandatePaymentMethodDetails"
                },
                "single_use": {
                    "$ref": "#/definitions/stripe.MandateSingleUse"
                },
                "status": {
                    "$ref": "#/definitions/stripe.MandateStatus"
                },
                "type": {
                    "$ref": "#/definitions/stripe.MandateType"
                }
            }
        },
        "stripe.MandateCustomerAcceptance": {
            "type": "object",
            "properties": {
                "accepted_at": {
                    "type": "integer"
                },
                "offline": {
                    "$ref": "#/definitions/stripe.MandateCustomerAcceptanceOffline"
                },
                "online": {
                    "$ref": "#/definitions/stripe.MandateCustomerAcceptanceOnline"
                },
                "type": {
                    "$ref": "#/definitions/stripe.MandateCustomerAcceptanceType"
                }
            }
        },
        "stripe.MandateCustomerAcceptanceOffline": {
            "type": "object"
        },
        "stripe.MandateCustomerAcceptanceOnline": {
            "type": "object",
            "properties": {
                "ip_address": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                }
            }
        },
        "stripe.MandateCustomerAcceptanceType": {
            "type": "string",
            "enum": [
                "offline",
                "online"
            ],
            "x-enum-varnames": [
                "MandateCustomerAcceptanceTypeOffline",
                "MandateCustomerAcceptanceTypeOnline"
            ]
        },
        "stripe.MandateMultiUse": {
            "type": "object"
        },
        "stripe.MandatePaymentMethodDetails": {
            "type": "object",
            "properties": {
                "au_becs_debit": {
                    "$ref": "#/definitions/stripe.MandatePaymentMethodDetailsAUBECSDebit"
                },
                "card": {
                    "$ref": "#/definitions/stripe.MandatePaymentMethodDetailsCard"
                },
                "sepa_debit": {
                    "$ref": "#/definitions/stripe.MandatePaymentMethodDetailsSepaDebit"
                },
                "type": {
                    "$ref": "#/definitions/stripe.PaymentMethodType"
                }
            }
        },
        "stripe.MandatePaymentMethodDetailsAUBECSDebit": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.MandatePaymentMethodDetailsCard": {
            "type": "object"
        },
        "stripe.MandatePaymentMethodDetailsSepaDebit": {
            "type": "object",
            "properties": {
                "reference": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.MandateSingleUse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "currency": {
                    "$ref": "#/definitions/stripe.Currency"
                }
            }
        },
        "stripe.MandateStatus": {
            "type": "string",
            "enum": [
                "active",
                "inactive",
                "pending"
            ],
            "x-enum-varnames": [
                "MandateStatusActive",
                "MandateStatusInactive",
                "MandateStatusPending"
            ]
        },
        "stripe.MandateType": {
            "type": "string",
            "enum": [
                "multi_use",
                "single_use"
            ],
            "x-enum-varnames": [
                "MandateTypeMultiUse",
                "MandateTypeSingleUse"
            ]
        },
        "stripe.PackageDimensions": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "number"
                },
                "length": {
                    "type": "number"
                },
                "weight": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "stripe.PaymentIntent": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "amount_capturable": {
                    "type": "integer"
                },
                "amount_received": {
                    "type": "integer"
                },
                "application": {
                    "$ref": "#/definitions/stripe.Application"
                },
                "application_fee_amount": {
                    "type": "integer"
                },
                "canceled_at": {
                    "type": "integer"
                },
                "cancellation_reason": {
                    "$ref": "#/definitions/stripe.PaymentIntentCancellationReason"
                },
                "capture_method": {
                    "$ref": "#/definitions/stripe.PaymentIntentCaptureMethod"
                },
                "charges": {
                    "$ref": "#/definitions/stripe.ChargeList"
                },
                "client_secret": {
                    "type": "string"
                },
                "confirmation_method": {
                    "$ref": "#/definitions/stripe.PaymentIntentConfirmationMethod"
                },
                "created": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string"
                },
                "customer": {
                    "$ref": "#/definitions/stripe.Customer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "invoice": {
                    "$ref": "#/definitions/stripe.Invoice"
                },
                "last_payment_error": {
                    "$ref": "#/definitions/stripe.Error"
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "next_action": {
                    "$ref": "#/definitions/stripe.PaymentIntentNextAction"
                },
                "on_behalf_of": {
                    "$ref": "#/definitions/stripe.Account"
                },
                "payment_method": {
                    "$ref": "#/definitions/stripe.PaymentMethod"
                },
                "payment_method_options": {
                    "$ref": "#/definitions/stripe.PaymentIntentPaymentMethodOptions"
                },
                "payment_method_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "receipt_email": {
                    "type": "string"
                },
                "review": {
                    "$ref": "#/definitions/stripe.Review"
                },
                "setup_future_usage": {
                    "$ref": "#/definitions/stripe.PaymentIntentSetupFutureUsage"
                },
                "shipping": {
                    "$ref": "#/definitions/stripe.ShippingDetails"
                },
                "source": {
                    "$ref": "#/definitions/stripe.PaymentSource"
                },
                "statement_descriptor": {
                    "type": "string"
                },
                "statement_descriptor_suffix": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/stripe.PaymentIntentStatus"
                },
                "transfer_data": {
                    "$ref": "#/definitions/stripe.PaymentIntentTransferData"
                },
                "transfer_group": {
                    "type": "string"
                }
            }
        },
        "stripe.PaymentIntentCancellationReason": {
            "type": "string",
            "enum": [
                "abandoned",
                "automatic",
                "duplicate",
                "failed_invoice",
                "fraudulent",
                "requested_by_customer",
                "void_invoice"
            ],
            "x-enum-varnames": [
                "PaymentIntentCancellationReasonAbandoned",
                "PaymentIntentCancellationReasonAutomatic",
                "PaymentIntentCancellationReasonDuplicate",
                "PaymentIntentCancellationReasonFailedInvoice",
                "PaymentIntentCancellationReasonFraudulent",
                "PaymentIntentCancellationReasonRequestedByCustomer",
                "PaymentIntentCancellationReasonVoidInvoice"
            ]
        },
        "stripe.PaymentIntentCaptureMethod": {
            "type": "string",
            "enum": [
                "automatic",
                "manual"
            ],
            "x-enum-varnames": [
                "PaymentIntentCaptureMethodAutomatic",
                "PaymentIntentCaptureMethodManual"
            ]
        },
        "stripe.PaymentIntentConfirmationMethod": {
            "type": "string",
            "enum": [
                "automatic",
                "manual"
            ],
            "x-enum-varnames": [
                "PaymentIntentConfirmationMethodAutomatic",
                "PaymentIntentConfirmationMethodManual"
            ]
        },
        "stripe.PaymentIntentNextAction": {
            "type": "object",
            "properties": {
                "redirect_to_url": {
                    "$ref": "#/definitions/stripe.PaymentIntentNextActionRedirectToURL"
                },
                "type": {
                    "$ref": "#/definitions/stripe.PaymentIntentNextActionType"
                }
            }
        },
        "stripe.PaymentIntentNextActionRedirectToURL": {
            "type": "object",
            "properties": {
                "return_url": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.PaymentIntentNextActionType": {
            "type": "string",
            "enum": [
                "redirect_to_url"
            ],
            "x-enum-varnames": [
                "PaymentIntentNextActionTypeRedirectToURL"
            ]
        },
        "stripe.PaymentIntentPaymentMethodOptions": {
            "type": "object",
            "properties": {
                "card": {
                    "$ref": "#/definitions/stripe.PaymentIntentPaymentMethodOptionsCard"
                }
            }
        },
        "stripe.PaymentIntentPaymentMethodOptionsCard": {
            "type": "object",
            "properties": {
                "installments": {
                    "$ref": "#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardInstallments"
                },
                "request_three_d_secure": {
                    "$ref": "#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardRequestThreeDSecure"
                }
            }
        },
        "stripe.PaymentIntentPaymentMethodOptionsCardInstallments": {
            "type": "object",
            "properties": {
                "available_plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardInstallmentsPlan"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "plan": {
                    "$ref": "#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardInstallmentsPlan"
                }
            }
        },
        "stripe.PaymentIntentPaymentMethodOptionsCardInstallmentsPlan": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "interval": {
                    "$ref": "#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardInstallmentsPlanInterval"
                },
                "type": {
                    "$ref": "#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardInstallmentsPlanType"
                }
            }
        },
        "stripe.PaymentIntentPaymentMethodOptionsCardInstallmentsPlanInterval": {
            "type": "string",
            "enum": [
                "month"
            ],
            "x-enum-varnames": [
                "PaymentIntentPaymentMethodOptionsCardInstallmentsPlanIntervalMonth"
            ]
        },
        "stripe.PaymentIntentPaymentMethodOptionsCardInstallmentsPlanType": {
            "type": "string",
            "enum": [
                "fixed_count"
            ],
            "x-enum-varnames": [
                "PaymentIntentPaymentMethodOptionsCardInstallmentsPlanTypeFixedCount"
            ]
        },
        "stripe.PaymentIntentPaymentMethodOptionsCardRequestThreeDSecure": {
            "type": "string",
            "enum": [
                "any",
                "automatic"
            ],
            "x-enum-varnames": [
                "PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureAny",
                "PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureAutomatic"
            ]
        },
        "stripe.PaymentIntentSetupFutureUsage": {
            "type": "string",
            "enum": [
                "off_session",
                "on_session"
            ],
            "x-enum-varnames": [
                "PaymentIntentSetupFutureUsageOffSession",
                "PaymentIntentSetupFutureUsageOnSession"
            ]
        },
        "stripe.PaymentIntentStatus": {
            "type": "string",
            "enum": [
                "canceled",
                "processing",
                "requires_action",
                "requires_capture",
                "requires_confirmation",
                "requires_payment_method",
                "succeeded"
            ],
            "x-enum-varnames": [
                "PaymentIntentStatusCanceled",
                "PaymentIntentStatusProcessing",
                "PaymentIntentStatusRequiresAction",
                "PaymentIntentStatusRequiresCapture",
                "PaymentIntentStatusRequiresConfirmation",
                "PaymentIntentStatusRequiresPaymentMethod",
                "PaymentIntentStatusSucceeded"
            ]
        },
        "stripe.PaymentIntentTransferData": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "destination": {
                    "$ref": "#/definitions/stripe.Account"
                }
            }
        },
        "stripe.PaymentMethod": {
            "type": "object",
            "properties": {
                "au_becs_debit": {
                    "$ref": "#/definitions/stripe.PaymentMethodAUBECSDebit"
                },
                "billing_details": {
                    "$ref": "#/definitions/stripe.BillingDetails"
                },
                "card": {
                    "$ref": "#/definitions/stripe.PaymentMethodCard"
                },
                "card_present": {
                    "$ref": "#/definitions/stripe.PaymentMethodCardPresent"
                },
                "created": {
                    "type": "integer"
                },
                "customer": {
                    "$ref": "#/definitions/stripe.Customer"
                },
                "fpx": {
                    "$ref": "#/definitions/stripe.PaymentMethodFPX"
                },
                "id": {
                    "type": "string"
                },
                "ideal": {
                    "$ref": "#/definitions/stripe.PaymentMethodIdeal"
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "object": {
                    "type": "string"
                },
                "sepa_debit": {
                    "$ref": "#/definitions/stripe.PaymentMethodSepaDebit"
                },
                "type": {
                    "$ref": "#/definitions/stripe.PaymentMethodType"
                }
            }
        },
        "stripe.PaymentMethodAUBECSDebit": {
            "type": "object",
            "properties": {
                "bsb_number": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "last4": {
                    "type": "string"
                }
            }
        },
        "stripe.PaymentMethodCard": {
            "type": "object",
            "properties": {
                "brand": {
                    "$ref": "#/definitions/stripe.PaymentMethodCardBrand"
                },
                "checks": {
                    "$ref": "#/definitions/stripe.PaymentMethodCardChecks"
                },
                "country": {
                    "type": "string"
                },
                "description": {
                    "description": "Please note that the fields below are for internal use only and are not returned\nas part of standard API requests.",
                    "type": "string"
                },
                "exp_month": {
                    "type": "integer"
                },
                "exp_year": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "funding": {
                    "$ref": "#/definitions/stripe.CardFunding"
                },
                "iin": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "last4": {
                    "type": "string"
                },
                "three_d_secure_usage": {
                    "$ref": "#/definitions/stripe.PaymentMethodCardThreeDSecureUsage"
                },
                "wallet": {
                    "$ref": "#/definitions/stripe.PaymentMethodCardWallet"
                }
            }
        },
        "stripe.PaymentMethodCardBrand": {
            "type": "string",
            "enum": [
                "amex",
                "diners",
                "discover",
                "jcb",
                "mastercard",
                "unionpay",
                "unknown",
                "visa"
            ],
            "x-enum-varnames": [
                "PaymentMethodCardBrandAmex",
                "PaymentMethodCardBrandDiners",
                "PaymentMethodCardBrandDiscover",
                "PaymentMethodCardBrandJCB",
                "PaymentMethodCardBrandMastercard",
                "PaymentMethodCardBrandUnionpay",
                "PaymentMethodCardBrandUnknown",
                "PaymentMethodCardBrandVisa"
            ]
        },
        "stripe.PaymentMethodCardChecks": {
            "type": "object",
            "properties": {
                "address_line1_check": {
                    "$ref": "#/definitions/stripe.CardVerification"
                },
                "address_postal_code_check": {
                    "$ref": "#/definitions/stripe.CardVerification"
                },
                "cvc_check": {
                    "$ref": "#/definitions/stripe.CardVerification"
                }
            }
        },
        "stripe.PaymentMethodCardNetwork": {
            "type": "string",
            "enum": [
                "amex",
                "diners",
                "discover",
                "interac",
                "jcb",
                "mastercard",
                "unionpay",
                "unknown",
                "visa"
            ],
            "x-enum-varnames": [
                "PaymentMethodCardNetworkAmex",
                "PaymentMethodCardNetworkDiners",
                "PaymentMethodCardNetworkDiscover",
                "PaymentMethodCardNetworkInterac",
                "PaymentMethodCardNetworkJCB",
                "PaymentMethodCardNetworkMastercard",
                "PaymentMethodCardNetworkUnionpay",
                "PaymentMethodCardNetworkUnknown",
                "PaymentMethodCardNetworkVisa"
            ]
        },
        "stripe.PaymentMethodCardPresent": {
            "type": "object"
        },
        "stripe.PaymentMethodCardThreeDSecureUsage": {
            "type": "object",
            "properties": {
                "supported": {
                    "type": "boolean"
                }
            }
        },
        "stripe.PaymentMethodCardWallet": {
            "type": "object",
            "properties": {
                "dynamic_last4": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/stripe.PaymentMethodCardWalletType"
                }
            }
        },
        "stripe.PaymentMethodCardWalletType": {
            "type": "string",
            "enum": [
                "amex_express_checkout",
                "apple_pay",
                "google_pay",
                "masterpass",
                "samsung_pay",
                "visa_checkout"
            ],
            "x-enum-varnames": [
                "PaymentMethodCardWalletTypeAmexExpressCheckout",
                "PaymentMethodCardWalletTypeApplePay",
                "PaymentMethodCardWalletTypeGooglePay",
                "PaymentMethodCardWalletTypeMasterpass",
                "PaymentMethodCardWalletTypeSamsungPay",
                "PaymentMethodCardWalletTypeVisaCheckout"
            ]
        },
        "stripe.PaymentMethodFPX": {
            "type": "object",
            "properties": {
                "account_holder_type": {
                    "$ref": "#/definitions/stripe.PaymentMethodFPXAccountHolderType"
                },
                "bank": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                }
            }
        },
        "stripe.PaymentMethodFPXAccountHolderType": {
            "type": "string",
            "enum": [
                "individual",
                "company"
            ],
            "x-enum-varnames": [
                "PaymentMethodFPXAccountHolderTypeIndividual",
                "PaymentMethodFPXAccountHolderTypeCompany"
            ]
        },
        "stripe.PaymentMethodIdeal": {
            "type": "object",
            "properties": {
                "bank": {
                    "type": "string"
                },
                "bic": {
                    "type": "string"
                }
            }
        },
        "stripe.PaymentMethodSepaDebit": {
            "type": "object",
            "properties": {
                "bank_code": {
                    "type": "string"
                },
                "branch_code": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "last4": {
                    "type": "string"
                }
            }
        },
        "stripe.PaymentMethodType": {
            "type": "string",
            "enum": [
                "au_becs_debit",
                "card",
                "card_present",
                "fpx",
                "ideal",
                "sepa_debit"
            ],
            "x-enum-varnames": [
                "PaymentMethodTypeAUBECSDebit",
                "PaymentMethodTypeCard",
                "PaymentMethodTypeCardPresent",
                "PaymentMethodTypeFPX",
                "PaymentMethodTypeIdeal",
                "PaymentMethodTypeSepaDebit"
            ]
        },
        "stripe.PaymentSource": {
            "type": "object",
            "properties": {
                "deleted": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "object": {
                    "$ref": "#/definitions/stripe.PaymentSourceType"
                }
            }
        },
        "stripe.PaymentSourceType": {
            "type": "string",
            "enum": [
                "account",
                "bank_account",
                "bitcoin_receiver",
                "card",
                "source"
            ],
            "x-enum-varnames": [
                "PaymentSourceTypeAccount",
                "PaymentSourceTypeBankAccount",
                "PaymentSourceTypeBitcoinReceiver",
                "PaymentSourceTypeCard",
                "PaymentSourceTypeObject"
            ]
        },
        "stripe.PayoutInterval": {
            "type": "string",
            "enum": [
                "daily",
                "manual",
                "monthly",
                "weekly"
            ],
            "x-enum-varnames": [
                "PayoutIntervalDaily",
                "PayoutIntervalManual",
                "PayoutIntervalMonthly",
                "PayoutIntervalWeekly"
            ]
        },
        "stripe.Period": {
            "type": "object",
            "properties": {
                "end": {
                    "type": "integer"
                },
                "start": {
                    "type": "integer"
                }
            }
        },
        "stripe.Person": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "address": {
                    "$ref": "#/definitions/stripe.AccountAddress"
                },
                "address_kana": {
                    "$ref": "#/definitions/stripe.AccountAddress"
                },
                "address_kanji": {
                    "$ref": "#/definitions/stripe.AccountAddress"
                },
                "deleted": {
                    "type": "boolean"
                },
                "dob": {
                    "$ref": "#/definitions/stripe.DOB"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "first_name_kana": {
                    "type": "string"
                },
                "first_name_kanji": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_number_provided": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "last_name_kana": {
                    "type": "string"
                },
                "last_name_kanji": {
                    "type": "string"
                },
                "maiden_name": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "object": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "relationship": {
                    "$ref": "#/definitions/stripe.Relationship"
                },
                "requirements": {
                    "$ref": "#/definitions/stripe.Requirements"
                },
                "ssn_last_4_provided": {
                    "type": "boolean"
                },
                "verification": {
                    "$ref": "#/definitions/stripe.PersonVerification"
                }
            }
        },
        "stripe.PersonVerification": {
            "type": "object",
            "properties": {
                "additional_document": {
                    "$ref": "#/definitions/stripe.PersonVerificationDocument"
                },
                "details": {
                    "type": "string"
                },
                "details_code": {
                    "$ref": "#/definitions/stripe.PersonVerificationDetailsCode"
                },
                "document": {
                    "$ref": "#/definitions/stripe.PersonVerificationDocument"
                },
                "status": {
                    "$ref": "#/definitions/stripe.IdentityVerificationStatus"
                }
            }
        },
        "stripe.PersonVerificationDetailsCode": {
            "type": "string",
            "enum": [
                "failed_keyed_identity",
                "failed_other",
                "scan_name_mismatch"
            ],
            "x-enum-varnames": [
                "PersonVerificationDetailsCodeFailedKeyedIdentity",
                "PersonVerificationDetailsCodeFailedOther",
                "PersonVerificationDetailsCodeScanNameMismatch"
            ]
        },
        "stripe.PersonVerificationDocument": {
            "type": "object",
            "properties": {
                "back": {
                    "$ref": "#/definitions/stripe.File"
                },
                "details": {
                    "type": "string"
                },
                "details_code": {
                    "$ref": "#/definitions/stripe.VerificationDocumentDetailsCode"
                },
                "front": {
                    "$ref": "#/definitions/stripe.File"
                }
            }
        },
        "stripe.Plan": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "aggregate_usage": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "amount_decimal": {
                    "type": "string",
                    "example": "0"
                },
                "billing_scheme": {
                    "$ref": "#/definitions/stripe.PlanBillingScheme"
                },
                "created": {
                    "type": "integer"
                },
                "currency": {
                    "$ref": "#/definitions/stripe.Currency"
                },
                "deleted": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "interval": {
                    "$ref": "#/definitions/stripe.PlanInterval"
                },
                "interval_count": {
                    "type": "integer"
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "nickname": {
                    "type": "string"
                },
                "product": {
                    "$ref": "#/definitions/stripe.Product"
                },
                "tiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.PlanTier"
                    }
                },
                "tiers_mode": {
                    "type": "string"
                },
                "transform_usage": {
                    "$ref": "#/definitions/stripe.PlanTransformUsage"
                },
                "trial_period_days": {
                    "type": "integer"
                },
                "usage_type": {
                    "$ref": "#/definitions/stripe.PlanUsageType"
                }
            }
        },
        "stripe.PlanBillingScheme": {
            "type": "string",
            "enum": [
                "per_unit",
                "tiered"
            ],
            "x-enum-varnames": [
                "PlanBillingSchemePerUnit",
                "PlanBillingSchemeTiered"
            ]
        },
        "stripe.PlanInterval": {
            "type": "string",
            "enum": [
                "day",
                "week",
                "month",
                "year"
            ],
            "x-enum-varnames": [
                "PlanIntervalDay",
                "PlanIntervalWeek",
                "PlanIntervalMonth",
                "PlanIntervalYear"
            ]
        },
        "stripe.PlanTier": {
            "type": "object",
            "properties": {
                "flat_amount": {
                    "type": "integer"
                },
                "flat_amount_decimal": {
                    "type": "string",
                    "example": "0"
                },
                "unit_amount": {
                    "type": "integer"
                },
                "unit_amount_decimal": {
                    "type": "string",
                    "example": "0"
                },
                "up_to": {
                    "type": "integer"
                }
            }
        },
        "stripe.PlanTransformUsage": {
            "type": "object",
            "properties": {
                "divide_by": {
                    "type": "integer"
                },
                "round": {
                    "$ref": "#/definitions/stripe.PlanTransformUsageRound"
                }
            }
        },
        "stripe.PlanTransformUsageRound": {
            "type": "string",
            "enum": [
                "down",
                "up"
            ],
            "x-enum-varnames": [
                "PlanTransformUsageRoundDown",
                "PlanTransformUsageRoundUp"
            ]
        },
        "stripe.PlanUsageType": {
            "type": "string",
            "enum": [
                "licensed",
                "metered"
            ],
            "x-enum-varnames": [
                "PlanUsageTypeLicensed",
                "PlanUsageTypeMetered"
            ]
        },
        "stripe.Product": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "attributes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "caption": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "deactivate_on": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "package_dimensions": {
                    "$ref": "#/definitions/stripe.PackageDimensions"
                },
                "shippable": {
                    "type": "boolean"
                },
                "statement_descriptor": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/stripe.ProductType"
                },
                "unit_label": {
                    "type": "string"
                },
                "updated": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.ProductType": {
            "type": "string",
            "enum": [
                "good",
                "service"
            ],
            "x-enum-varnames": [
                "ProductTypeGood",
                "ProductTypeService"
            ]
        },
        "stripe.Recipient": {
            "type": "object",
            "properties": {
                "active_account": {
                    "$ref": "#/definitions/stripe.BankAccount"
                },
                "cards": {
                    "$ref": "#/definitions/stripe.CardList"
                },
                "created": {
                    "type": "integer"
                },
                "default_card": {
                    "$ref": "#/definitions/stripe.Card"
                },
                "deleted": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "migrated_to": {
                    "$ref": "#/definitions/stripe.Account"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/stripe.RecipientType"
                }
            }
        },
        "stripe.RecipientType": {
            "type": "string",
            "enum": [
                "individual",
                "corporation"
            ],
            "x-enum-varnames": [
                "RecipientTypeIndividual",
                "RecipientTypeCorporation"
            ]
        },
        "stripe.Refund": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "balance_transaction": {
                    "$ref": "#/definitions/stripe.BalanceTransaction"
                },
                "charge": {
                    "$ref": "#/definitions/stripe.Charge"
                },
                "created": {
                    "type": "integer"
                },
                "currency": {
                    "$ref": "#/definitions/stripe.Currency"
                },
                "failure_balance_transaction": {
                    "$ref": "#/definitions/stripe.BalanceTransaction"
                },
                "failure_reason": {
                    "$ref": "#/definitions/stripe.RefundFailureReason"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "object": {
                    "type": "string"
                },
                "payment_intent": {
                    "$ref": "#/definitions/stripe.PaymentIntent"
                },
                "reason": {
                    "$ref": "#/definitions/stripe.RefundReason"
                },
                "receipt_number": {
                    "type": "string"
                },
                "source_transfer_reversal": {
                    "$ref": "#/definitions/stripe.Reversal"
                },
                "status": {
                    "$ref": "#/definitions/stripe.RefundStatus"
                },
                "transfer_reversal": {
                    "$ref": "#/definitions/stripe.Reversal"
                }
            }
        },
        "stripe.RefundFailureReason": {
            "type": "string",
            "enum": [
                "expired_or_canceled_card",
                "lost_or_stolen_card",
                "unknown"
            ],
            "x-enum-varnames": [
                "RefundFailureReasonExpiredOrCanceledCard",
                "RefundFailureReasonLostOrStolenCard",
                "RefundFailureReasonUnknown"
            ]
        },
        "stripe.RefundList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.Refund"
                    }
                },
                "has_more": {
                    "type": "boolean"
                },
                "total_count": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.RefundReason": {
            "type": "string",
            "enum": [
                "duplicate",
                "expired_uncaptured_charge",
                "fraudulent",
                "requested_by_customer"
            ],
            "x-enum-varnames": [
                "RefundReasonDuplicate",
                "RefundReasonExpiredUncapturedCharge",
                "RefundReasonFraudulent",
                "RefundReasonRequestedByCustomer"
            ]
        },
        "stripe.RefundStatus": {
            "type": "string",
            "enum": [
                "canceled",
                "failed",
                "pending",
                "succeeded"
            ],
            "x-enum-varnames": [
                "RefundStatusCanceled",
                "RefundStatusFailed",
                "RefundStatusPending",
                "RefundStatusSucceeded"
            ]
        },
        "stripe.Relationship": {
            "type": "object",
            "properties": {
                "director": {
                    "type": "boolean"
                },
                "executive": {
                    "type": "boolean"
                },
                "owner": {
                    "type": "boolean"
                },
                "percent_ownership": {
                    "type": "number"
                },
                "representative": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "stripe.Requirements": {
            "type": "object",
            "properties": {
                "currently_due": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.AccountRequirementsError"
                    }
                },
                "eventually_due": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "past_due": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pending_verification": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "stripe.Reversal": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "balance_transaction": {
                    "$ref": "#/definitions/stripe.BalanceTransaction"
                },
                "created": {
                    "type": "integer"
                },
                "currency": {
                    "$ref": "#/definitions/stripe.Currency"
                },
                "description": {
                    "type": "string"
                },
                "destination_payment_refund": {
                    "$ref": "#/definitions/stripe.Refund"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "source_refund": {
                    "$ref": "#/definitions/stripe.Refund"
                },
                "transfer": {
                    "type": "string"
                }
            }
        },
        "stripe.ReversalList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.Reversal"
                    }
                },
                "has_more": {
                    "type": "boolean"
                },
                "total_count": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.Review": {
            "type": "object",
            "properties": {
                "billing_zip": {
                    "type": "string"
                },
                "charge": {
                    "$ref": "#/definitions/stripe.Charge"
                },
                "closed_reason": {
                    "$ref": "#/definitions/stripe.ReviewClosedReason"
                },
                "created": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "ip_address_location": {
                    "$ref": "#/definitions/stripe.ReviewIPAddressLocation"
                },
                "livemode": {
                    "type": "boolean"
                },
                "object": {
                    "type": "string"
                },
                "open": {
                    "type": "boolean"
                },
                "opened_reason": {
                    "$ref": "#/definitions/stripe.ReviewOpenedReason"
                },
                "payment_intent": {
                    "$ref": "#/definitions/stripe.PaymentIntent"
                },
                "reason": {
                    "$ref": "#/definitions/stripe.ReviewReasonType"
                },
                "session": {
                    "$ref": "#/definitions/stripe.ReviewSession"
                }
            }
        },
        "stripe.ReviewClosedReason": {
            "type": "string",
            "enum": [
                "approved",
                "disputed",
                "refunded",
                "refunded_as_fraud"
            ],
            "x-enum-varnames": [
                "ReviewClosedReasonApproved",
                "ReviewClosedReasonDisputed",
                "ReviewClosedReasonRefunded",
                "ReviewClosedReasonRefundedAsFraud"
            ]
        },
        "stripe.ReviewIPAddressLocation": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "region": {
                    "type": "string"
                }
            }
        },
        "stripe.ReviewOpenedReason": {
            "type": "string",
            "enum": [
                "manual",
                "rule"
            ],
            "x-enum-varnames": [
                "ReviewOpenedReasonManual",
                "ReviewOpenedReasonRule"
            ]
        },
        "stripe.ReviewReasonType": {
            "type": "string",
            "enum": [
                "approved",
                "disputed",
                "manual",
                "refunded",
                "refunded_as_fraud",
                "rule"
            ],
            "x-enum-varnames": [
                "ReviewReasonApproved",
                "ReviewReasonDisputed",
                "ReviewReasonManual",
                "ReviewReasonRefunded",
                "ReviewReasonRefundedAsFraud",
                "ReviewReasonRule"
            ]
        },
        "stripe.ReviewSession": {
            "type": "object",
            "properties": {
                "browser": {
                    "type": "string"
                },
                "device": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "stripe.SetupIntent": {
            "type": "object",
            "properties": {
                "application": {
                    "$ref": "#/definitions/stripe.Application"
                },
                "cancellation_reason": {
                    "$ref": "#/definitions/stripe.SetupIntentCancellationReason"
                },
                "client_secret": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "customer": {
                    "$ref": "#/definitions/stripe.Customer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_setup_error": {
                    "$ref": "#/definitions/stripe.Error"
                },
                "livemode": {
                    "type": "boolean"
                },
                "mandate": {
                    "$ref": "#/definitions/stripe.Mandate"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "next_action": {
                    "$ref": "#/definitions/stripe.SetupIntentNextAction"
                },
                "object": {
                    "type": "string"
                },
                "on_behalf_of": {
                    "$ref": "#/definitions/stripe.Account"
                },
                "payment_method": {
                    "$ref": "#/definitions/stripe.PaymentMethod"
                },
                "payment_method_options": {
                    "$ref": "#/definitions/stripe.SetupIntentPaymentMethodOptions"
                },
                "payment_method_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "single_use_mandate": {
                    "$ref": "#/definitions/stripe.Mandate"
                },
                "status": {
                    "$ref": "#/definitions/stripe.SetupIntentStatus"
                },
                "usage": {
                    "$ref": "#/definitions/stripe.SetupIntentUsage"
                }
            }
        },
        "stripe.SetupIntentCancellationReason": {
            "type": "string",
            "enum": [
                "abandoned",
                "failed_invoice",
                "fraudulent",
                "requested_by_customer"
            ],
            "x-enum-varnames": [
                "SetupIntentCancellationReasonAbandoned",
                "SetupIntentCancellationReasonFailedInvoice",
                "SetupIntentCancellationReasonFraudulent",
                "SetupIntentCancellationReasonRequestedByCustomer"
            ]
        },
        "stripe.SetupIntentNextAction": {
            "type": "object",
            "properties": {
                "redirect_to_url": {
                    "$ref": "#/definitions/stripe.SetupIntentNextActionRedirectToURL"
                },
                "type": {
                    "$ref": "#/definitions/stripe.SetupIntentNextActionType"
                }
            }
        },
        "stripe.SetupIntentNextActionRedirectToURL": {
            "type": "object",
            "properties": {
                "return_url": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.SetupIntentNextActionType": {
            "type": "string",
            "enum": [
                "redirect_to_url"
            ],
            "x-enum-varnames": [
                "SetupIntentNextActionTypeRedirectToURL"
            ]
        },
        "stripe.SetupIntentPaymentMethodOptions": {
            "type": "object",
            "properties": {
                "card": {
                    "$ref": "#/definitions/stripe.SetupIntentPaymentMethodOptionsCard"
                }
            }
        },
        "stripe.SetupIntentPaymentMethodOptionsCard": {
            "type": "object",
            "properties": {
                "request_three_d_secure": {
                    "$ref": "#/definitions/stripe.SetupIntentPaymentMethodOptionsCardRequestThreeDSecure"
                }
            }
        },
        "stripe.SetupIntentPaymentMethodOptionsCardRequestThreeDSecure": {
            "type": "string",
            "enum": [
                "any",
                "automatic"
            ],
            "x-enum-varnames": [
                "SetupIntentPaymentMethodOptionsCardRequestThreeDSecureAny",
                "SetupIntentPaymentMethodOptionsCardRequestThreeDSecureAutomatic"
            ]
        },
        "stripe.SetupIntentStatus": {
            "type": "string",
            "enum": [
                "canceled",
                "processing",
                "requires_action",
                "requires_confirmation",
                "requires_payment_method",
                "succeeded"
            ],
            "x-enum-varnames": [
                "SetupIntentStatusCanceled",
                "SetupIntentStatusProcessing",
                "SetupIntentStatusRequiresAction",
                "SetupIntentStatusRequiresConfirmation",
                "SetupIntentStatusRequiresPaymentMethod",
                "SetupIntentStatusSucceeded"
            ]
        },
        "stripe.SetupIntentUsage": {
            "type": "string",
            "enum": [
                "off_session",
                "on_session"
            ],
            "x-enum-varnames": [
                "SetupIntentUsageOffSession",
                "SetupIntentUsageOnSession"
            ]
        },
        "stripe.ShippingDetails": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/stripe.Address"
                },
                "carrier": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "tracking_number": {
                    "type": "string"
                }
            }
        },
        "stripe.SourceList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.PaymentSource"
                    }
                },
                "has_more": {
                    "type": "boolean"
                },
                "total_count": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.Subscription": {
            "type": "object",
            "properties": {
                "application_fee_percent": {
                    "type": "number"
                },
                "billing_cycle_anchor": {
                    "type": "integer"
                },
                "billing_thresholds": {
                    "$ref": "#/definitions/stripe.SubscriptionBillingThresholds"
                },
                "cancel_at": {
                    "type": "integer"
                },
                "cancel_at_period_end": {
                    "type": "boolean"
                },
                "canceled_at": {
                    "type": "integer"
                },
                "collection_method": {
                    "$ref": "#/definitions/stripe.SubscriptionCollectionMethod"
                },
                "created": {
                    "type": "integer"
                },
                "current_period_end": {
                    "type": "integer"
                },
                "current_period_start": {
                    "type": "integer"
                },
                "customer": {
                    "$ref": "#/definitions/stripe.Customer"
                },
                "days_until_due": {
                    "type": "integer"
                },
                "default_payment_method": {
                    "$ref": "#/definitions/stripe.PaymentMethod"
                },
                "default_source": {
                    "$ref": "#/definitions/stripe.PaymentSource"
                },
                "default_tax_rates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.TaxRate"
                    }
                },
                "discount": {
                    "$ref": "#/definitions/stripe.Discount"
                },
                "ended_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "items": {
                    "$ref": "#/definitions/stripe.SubscriptionItemList"
                },
                "latest_invoice": {
                    "$ref": "#/definitions/stripe.Invoice"
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "next_pending_invoice_item_invoice": {
                    "type": "integer"
                },
                "object": {
                    "type": "string"
                },
                "on_behalf_of": {
                    "$ref": "#/definitions/stripe.Account"
                },
                "pause_collection": {
                    "$ref": "#/definitions/stripe.SubscriptionPauseCollection"
                },
                "pending_invoice_item_interval": {
                    "$ref": "#/definitions/stripe.SubscriptionPendingInvoiceItemInterval"
                },
                "pending_setup_intent": {
                    "$ref": "#/definitions/stripe.SetupIntent"
                },
                "pending_update": {
                    "$ref": "#/definitions/stripe.SubscriptionPendingUpdate"
                },
                "plan": {
                    "$ref": "#/definitions/stripe.Plan"
                },
                "quantity": {
                    "type": "integer"
                },
                "schedule": {
                    "$ref": "#/definitions/stripe.SubscriptionSchedule"
                },
                "start_date": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/stripe.SubscriptionStatus"
                },
                "tax_percent": {
                    "description": "This field is deprecated and we recommend that you use TaxRates instead.",
                    "type": "number"
                },
                "transfer_data": {
                    "$ref": "#/definitions/stripe.SubscriptionTransferData"
                },
                "trial_end": {
                    "type": "integer"
                },
                "trial_start": {
                    "type": "integer"
                }
            }
        },
        "stripe.SubscriptionBillingThresholds": {
            "type": "object",
            "properties": {
                "amount_gte": {
                    "type": "integer"
                },
                "reset_billing_cycle_anchor": {
                    "type": "boolean"
                }
            }
        },
        "stripe.SubscriptionCollectionMethod": {
            "type": "string",
            "enum": [
                "charge_automatically",
                "send_invoice"
            ],
            "x-enum-varnames": [
                "SubscriptionCollectionMethodChargeAutomatically",
                "SubscriptionCollectionMethodSendInvoice"
            ]
        },
        "stripe.SubscriptionItem": {
            "type": "object",
            "properties": {
                "billing_thresholds": {
                    "$ref": "#/definitions/stripe.SubscriptionItemBillingThresholds"
                },
                "created": {
                    "type": "integer"
                },
                "deleted": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "plan": {
                    "$ref": "#/definitions/stripe.Plan"
                },
                "quantity": {
                    "type": "integer"
                },
                "subscription": {
                    "type": "string"
                },
                "tax_rates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.TaxRate"
                    }
                }
            }
        },
        "stripe.SubscriptionItemBillingThresholds": {
            "type": "object",
            "properties": {
                "usage_gte": {
                    "type": "integer"
                }
            }
        },
        "stripe.SubscriptionItemList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.SubscriptionItem"
                    }
                },
                "has_more": {
                    "type": "boolean"
                },
                "total_count": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.SubscriptionList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.Subscription"
                    }
                },
                "has_more": {
                    "type": "boolean"
                },
                "total_count": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.SubscriptionPauseCollection": {
            "type": "object",
            "properties": {
                "behavior": {
                    "$ref": "#/definitions/stripe.SubscriptionPauseCollectionBehavior"
                },
                "resumes_at": {
                    "type": "integer"
                }
            }
        },
        "stripe.SubscriptionPauseCollectionBehavior": {
            "type": "string",
            "enum": [
                "keep_as_draft",
                "mark_uncollectible",
                "void"
            ],
            "x-enum-varnames": [
                "SubscriptionPauseCollectionBehaviorKeepAsDraft",
                "SubscriptionPauseCollectionBehaviorMarkUncollectible",
                "SubscriptionPauseCollectionBehaviorVoid"
            ]
        },
        "stripe.SubscriptionPendingInvoiceItemInterval": {
            "type": "object",
            "properties": {
                "interval": {
                    "$ref": "#/definitions/stripe.SubscriptionPendingInvoiceItemIntervalInterval"
                },
                "interval_count": {
                    "type": "integer"
                }
            }
        },
        "stripe.SubscriptionPendingInvoiceItemIntervalInterval": {
            "type": "string",
            "enum": [
                "day",
                "month",
                "week",
                "year"
            ],
            "x-enum-varnames": [
                "SubscriptionPendingInvoiceItemIntervalIntervalDay",
                "SubscriptionPendingInvoiceItemIntervalIntervalMonth",
                "SubscriptionPendingInvoiceItemIntervalIntervalWeek",
                "SubscriptionPendingInvoiceItemIntervalIntervalYear"
            ]
        },
        "stripe.SubscriptionPendingUpdate": {
            "type": "object",
            "properties": {
                "billing_cycle_anchor": {
                    "type": "integer"
                },
                "expires_at": {
                    "type": "integer"
                },
                "subscription_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.SubscriptionItem"
                    }
                },
                "trial_end": {
                    "type": "integer"
                },
                "trial_from_plan": {
                    "type": "boolean"
                }
            }
        },
        "stripe.SubscriptionSchedule": {
            "type": "object",
            "properties": {
                "canceled_at": {
                    "type": "integer"
                },
                "completed_at": {
                    "type": "integer"
                },
                "created": {
                    "type": "integer"
                },
                "current_phase": {
                    "$ref": "#/definitions/stripe.SubscriptionScheduleCurrentPhase"
                },
                "customer": {
                    "$ref": "#/definitions/stripe.Customer"
                },
                "default_settings": {
                    "$ref": "#/definitions/stripe.SubscriptionScheduleDefaultSettings"
                },
                "end_behavior": {
                    "$ref": "#/definitions/stripe.SubscriptionScheduleEndBehavior"
                },
                "id": {
                    "type": "string"
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "object": {
                    "type": "string"
                },
                "phases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.SubscriptionSchedulePhase"
                    }
                },
                "released_subscription": {
                    "$ref": "#/definitions/stripe.Subscription"
                },
                "renewal_interval": {
                    "$ref": "#/definitions/stripe.SubscriptionScheduleRenewalInterval"
                },
                "status": {
                    "$ref": "#/definitions/stripe.SubscriptionScheduleStatus"
                },
                "subscription": {
                    "$ref": "#/definitions/stripe.Subscription"
                }
            }
        },
        "stripe.SubscriptionScheduleCurrentPhase": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "integer"
                }
            }
        },
        "stripe.SubscriptionScheduleDefaultSettings": {
            "type": "object",
            "properties": {
                "billing_thresholds": {
                    "$ref": "#/definitions/stripe.SubscriptionBillingThresholds"
                },
                "collection_method": {
                    "$ref": "#/definitions/stripe.SubscriptionCollectionMethod"
                },
                "default_payment_method": {
                    "$ref": "#/definitions/stripe.PaymentMethod"
                },
                "invoice_settings": {
                    "$ref": "#/definitions/stripe.SubscriptionScheduleInvoiceSettings"
                }
            }
        },
        "stripe.SubscriptionScheduleEndBehavior": {
            "type": "string",
            "enum": [
                "cancel",
                "release"
            ],
            "x-enum-varnames": [
                "SubscriptionScheduleEndBehaviorCancel",
                "SubscriptionScheduleEndBehaviorRelease"
            ]
        },
        "stripe.SubscriptionScheduleInvoiceSettings": {
            "type": "object",
            "properties": {
                "days_until_due": {
                    "type": "integer"
                }
            }
        },
        "stripe.SubscriptionSchedulePhase": {
            "type": "object",
            "properties": {
                "application_fee_percent": {
                    "type": "number"
                },
                "billing_thresholds": {
                    "$ref": "#/definitions/stripe.SubscriptionBillingThresholds"
                },
                "collection_method": {
                    "$ref": "#/definitions/stripe.SubscriptionCollectionMethod"
                },
                "coupon": {
                    "$ref": "#/definitions/stripe.Coupon"
                },
                "default_payment_method": {
                    "$ref": "#/definitions/stripe.PaymentMethod"
                },
                "default_tax_rates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.TaxRate"
                    }
                },
                "end_date": {
                    "type": "integer"
                },
                "invoice_settings": {
                    "$ref": "#/definitions/stripe.SubscriptionScheduleInvoiceSettings"
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.SubscriptionSchedulePhaseItem"
                    }
                },
                "start_date": {
                    "type": "integer"
                },
                "tax_percent": {
                    "description": "This field is deprecated and we recommend that you use TaxRates instead.",
                    "type": "number"
                },
                "trial_end": {
                    "type": "integer"
                }
            }
        },
        "stripe.SubscriptionSchedulePhaseItem": {
            "type": "object",
            "properties": {
                "billing_thresholds": {
                    "$ref": "#/definitions/stripe.SubscriptionItemBillingThresholds"
                },
                "plan": {
                    "$ref": "#/definitions/stripe.Plan"
                },
                "quantity": {
                    "type": "integer"
                },
                "tax_rates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.TaxRate"
                    }
                }
            }
        },
        "stripe.SubscriptionScheduleRenewalInterval": {
            "type": "object",
            "properties": {
                "interval": {
                    "$ref": "#/definitions/stripe.PlanInterval"
                },
                "length": {
                    "type": "integer"
                }
            }
        },
        "stripe.SubscriptionScheduleStatus": {
            "type": "string",
            "enum": [
                "active",
                "canceled",
                "completed",
                "not_started",
                "released"
            ],
            "x-enum-varnames": [
                "SubscriptionScheduleStatusActive",
                "SubscriptionScheduleStatusCanceled",
                "SubscriptionScheduleStatusCompleted",
                "SubscriptionScheduleStatusPastDue",
                "SubscriptionScheduleStatusTrialing"
            ]
        },
        "stripe.SubscriptionStatus": {
            "type": "string",
            "enum": [
                "active",
                "all",
                "canceled",
                "incomplete",
                "incomplete_expired",
                "past_due",
                "trialing",
                "unpaid"
            ],
            "x-enum-varnames": [
                "SubscriptionStatusActive",
                "SubscriptionStatusAll",
                "SubscriptionStatusCanceled",
                "SubscriptionStatusIncomplete",
                "SubscriptionStatusIncompleteExpired",
                "SubscriptionStatusPastDue",
                "SubscriptionStatusTrialing",
                "SubscriptionStatusUnpaid"
            ]
        },
        "stripe.SubscriptionTransferData": {
            "type": "object",
            "properties": {
                "destination": {
                    "$ref": "#/definitions/stripe.Account"
                }
            }
        },
        "stripe.TaxID": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "customer": {
                    "$ref": "#/definitions/stripe.Customer"
                },
                "deleted": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "livemode": {
                    "type": "boolean"
                },
                "object": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/stripe.TaxIDType"
                },
                "value": {
                    "type": "string"
                },
                "verification": {
                    "$ref": "#/definitions/stripe.TaxIDVerification"
                }
            }
        },
        "stripe.TaxIDList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stripe.TaxID"
                    }
                },
                "has_more": {
                    "type": "boolean"
                },
                "total_count": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "stripe.TaxIDType": {
            "type": "string",
            "enum": [
                "au_abn",
                "ca_bn",
                "ca_qst",
                "ch_vat",
                "es_cif",
                "eu_vat",
                "hk_br",
                "in_gst",
                "jp_cn",
                "kr_brn",
                "li_uid",
                "mx_rfc",
                "my_itn",
                "my_sst",
                "no_vat",
                "nz_gst",
                "ru_inn",
                "sg_uen",
                "sg_gst",
                "th_vat",
                "tw_vat",
                "us_ein",
                "za_vat",
                "unknown"
            ],
            "x-enum-varnames": [
                "TaxIDTypeAUABN",
                "TaxIDTypeCABN",
                "TaxIDTypeCAQST",
                "TaxIDTypeCHVAT",
                "TaxIDTypeESCIF",
                "TaxIDTypeEUVAT",
                "TaxIDTypeHKBR",
                "TaxIDTypeINGST",
                "TaxIDTypeJPCN",
                "TaxIDTypeKRBRN",
                "TaxIDTypeLIUID",
                "TaxIDTypeMXRFC",
                "TaxIDTypeMYITN",
                "TaxIDTypeMYSST",
                "TaxIDTypeNOVAT",
                "TaxIDTypeNZGST",
                "TaxIDTypeRUINN",
                "TaxIDTypeSGUEN",
                "TaxIDTypeSGGST",
                "TaxIDTypeTHVAT",
                "TaxIDTypeTWVAT",
                "TaxIDTypeUSEIN",
                "TaxIDTypeZAVAT",
                "TaxIDTypeUnknown"
            ]
        },
        "stripe.TaxIDVerification": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/stripe.TaxIDVerificationStatus"
                },
                "verified_address": {
                    "type": "string"
                },
                "verified_name": {
                    "type": "string"
                }
            }
        },
        "stripe.TaxIDVerificationStatus": {
            "type": "string",
            "enum": [
                "pending",
                "unavailable",
                "unverified",
                "verified"
            ],
            "x-enum-varnames": [
                "TaxIDVerificationStatusPending",
                "TaxIDVerificationStatusUnavailable",
                "TaxIDVerificationStatusUnverified",
                "TaxIDVerificationStatusVerified"
            ]
        },
        "stripe.TaxRate": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "inclusive": {
                    "type": "boolean"
                },
                "jurisdiction": {
                    "type": "string"
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "object": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number"
                }
            }
        },
        "stripe.ThreeDSecure": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "authenticated": {
                    "type": "boolean"
                },
                "card": {
                    "$ref": "#/definitions/stripe.Card"
                },
                "created": {
                    "type": "integer"
                },
                "currency": {
                    "$ref": "#/definitions/stripe.Currency"
                },
                "id": {
                    "type": "string"
                },
                "livemode": {
                    "type": "boolean"
                },
                "redirect_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "supported": {
                    "type": "string"
                }
            }
        },
        "stripe.Transfer": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "amount_reversed": {
                    "type": "integer"
                },
                "balance_transaction": {
                    "$ref": "#/definitions/stripe.BalanceTransaction"
                },
                "created": {
                    "type": "integer"
                },
                "currency": {
                    "$ref": "#/definitions/stripe.Currency"
                },
                "description": {
                    "type": "string"
                },
                "destination": {
                    "$ref": "#/definitions/stripe.TransferDestination"
                },
                "destination_payment": {
                    "$ref": "#/definitions/stripe.Charge"
                },
                "id": {
                    "type": "string"
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "reversals": {
                    "$ref": "#/definitions/stripe.ReversalList"
                },
                "reversed": {
                    "type": "boolean"
                },
                "source_transaction": {
                    "$ref": "#/definitions/stripe.BalanceTransactionSource"
                },
                "source_type": {
                    "$ref": "#/definitions/stripe.TransferSourceType"
                },
                "transfer_group": {
                    "type": "string"
                }
            }
        },
        "stripe.TransferDestination": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "stripe.TransferSourceType": {
            "type": "string",
            "enum": [
                "alipay_account",
                "bank_account",
                "bitcoin_receiver",
                "card",
                "fpx"
            ],
            "x-enum-varnames": [
                "TransferSourceTypeAlipayAccount",
                "TransferSourceTypeBankAccount",
                "TransferSourceTypeBitcoinReceiver",
                "TransferSourceTypeCard",
                "TransferSourceTypeFPX"
            ]
        },
        "stripe.VerificationDocumentDetailsCode": {
            "type": "string",
            "enum": [
                "document_corrupt",
                "document_failed_copy",
                "document_failed_greyscale",
                "document_failed_other",
                "document_failed_test_mode",
                "document_fraudulent",
                "document_id_type_not_supported",
                "document_id_country_not_supported",
                "document_manipulated",
                "document_missing_back",
                "document_missing_front",
                "document_not_readable",
                "document_not_uploaded",
                "document_too_large"
            ],
            "x-enum-varnames": [
                "VerificationDocumentDetailsCodeDocumentCorrupt",
                "VerificationDocumentDetailsCodeDocumentFailedCopy",
                "VerificationDocumentDetailsCodeDocumentFailedGreyscale",
                "VerificationDocumentDetailsCodeDocumentFailedOther",
                "VerificationDocumentDetailsCodeDocumentFailedTestMode",
                "VerificationDocumentDetailsCodeDocumentFraudulent",
                "VerificationDocumentDetailsCodeDocumentIDTypeNotSupported",
                "VerificationDocumentDetailsCodeDocumentIDCountryNotSupported",
                "VerificationDocumentDetailsCodeDocumentManipulated",
                "VerificationDocumentDetailsCodeDocumentMissingBack",
                "VerificationDocumentDetailsCodeDocumentMissingFront",
                "VerificationDocumentDetailsCodeDocumentNotReadable",
                "VerificationDocumentDetailsCodeDocumentNotUploaded",
                "VerificationDocumentDetailsCodeDocumentTooLarge"
            ]
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}